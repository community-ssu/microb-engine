# Implementation of Extension manager in TestGtkEmbed (mot XRE_main based applications) functionality.
Index: mozilla/xulrunner/build.mk
===================================================================
--- mozilla.orig/xulrunner/build.mk
+++ mozilla/xulrunner/build.mk
@@ -68,16 +68,18 @@
 tier_app_dirs += embedding/tests
 endif
 endif
 
 ifdef MOZ_JAVAXPCOM
 tier_app_dirs += extensions/java
 endif
 
+tier_app_dirs += embedding/components/xulappinfo
+
 tier_app_dirs += xulrunner
 
 installer:
 	@echo "XULRunner doesn't have an installer yet."
 	@exit 1
 
 package:
 	@$(MAKE) -C xulrunner/installer
Index: mozilla/embedding/components/xulappinfo/Makefile.in
===================================================================
--- /dev/null
+++ mozilla/embedding/components/xulappinfo/Makefile.in
@@ -0,0 +1,63 @@
+#
+# ***** BEGIN LICENSE BLOCK *****
+# Version: MPL 1.1/GPL 2.0/LGPL 2.1
+#
+# The contents of this file are subject to the Mozilla Public License Version
+# 1.1 (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+# http://www.mozilla.org/MPL/
+#
+# Software distributed under the License is distributed on an "AS IS" basis,
+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+# for the specific language governing rights and limitations under the
+# License.
+#
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# the mozilla.org SeaMonkey project.
+# Portions created by the Initial Developer are Copyright (C) 2005
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#
+# Alternatively, the contents of this file may be used under the terms of
+# either the GNU General Public License Version 2 or later (the "GPL"), or
+# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+# in which case the provisions of the GPL or the LGPL are applicable instead
+# of those above. If you wish to allow use of your version of this file only
+# under the terms of either the GPL or the LGPL, and not to allow others to
+# use your version of this file under the terms of the MPL, indicate your
+# decision by deleting the provisions above and replace them with the notice
+# and other provisions required by the GPL or the LGPL. If you do not delete
+# the provisions above, a recipient may use your version of this file under
+# the terms of any one of the MPL, the GPL or the LGPL.
+#
+# ***** END LICENSE BLOCK *****
+
+
+DEPTH		= ../../..
+topsrcdir	= @top_srcdir@
+srcdir		= @srcdir@
+VPATH		= @srcdir@
+
+include $(DEPTH)/config/autoconf.mk
+
+DEFINES += -DMOZ_APP_DISPLAYNAME=$(MOZ_APP_DISPLAYNAME) \
+	-DMOZ_APP_VERSION=$(MOZ_APP_VERSION) \
+	-DTOOLKIT_EM_VERSION=$(shell $(PERL) $(topsrcdir)/config/milestone.pl --topsrcdir=$(topsrcdir))
+
+MODULE		= xulappinfo
+XPIDL_MODULE	= xulappinfo
+
+#XPIDLSRCS	= nsIXULAppInfo.idl
+
+EXTRA_PP_COMPONENTS = xulappinfo.js
+
+GARBAGE += nsIXULAppInfo.idl
+
+include $(topsrcdir)/config/rules.mk
+
+nsIXULAppInfo.idl: $(topsrcdir)/toolkit/xre/nsIXULAppInfo.idl
+	$(NSINSTALL) $(topsrcdir)/toolkit/xre/nsIXULAppInfo.idl .
+
Index: mozilla/embedding/components/xulappinfo/xulappinfo.js
===================================================================
--- /dev/null
+++ mozilla/embedding/components/xulappinfo/xulappinfo.js
@@ -0,0 +1,94 @@
+const XULAPPINFO_CONTRACTID = "@mozilla.org/xre/app-info;1";
+const XULAPPINFO_CID = Components.ID("{f8b59582-5808-4e6e-a467-339e9c82756f}");
+
+const nsIXULAppInfo = Components.interfaces.nsIXULAppInfo;
+const nsIXULRuntime = Components.interfaces.nsIXULRuntime;
+const nsIComponentRegistrar = Components.interfaces.nsIComponentRegistrar;
+const nsIFactory = Components.interfaces.nsIFactory;
+const nsISupports = Components.interfaces.nsISupports;
+
+function XULAppInfoService()
+{
+}
+
+XULAppInfoService.prototype.vendor = "mozilla.org";
+XULAppInfoService.prototype.ID = "{92650c4d-4b8e-4d2a-b7eb-24ecf4f6b63a}";
+XULAppInfoService.prototype.OS = "_UNKNOWN";
+XULAppInfoService.prototype.inSafeMode = false;
+XULAppInfoService.prototype.logConsoleErrors = false;
+XULAppInfoService.prototype.XPCOMABI = "UNKNOWN_XPCOM_ABI";
+#expand XULAppInfoService.prototype.name = "__MOZ_APP_DISPLAYNAME__";
+#expand XULAppInfoService.prototype.version = "__MOZ_APP_VERSION__";
+#expand XULAppInfoService.prototype.appBuildID = "__BUILD_ID__";
+#expand XULAppInfoService.prototype.platformVersion = "__TOOLKIT_EM_VERSION__";
+#expand XULAppInfoService.prototype.platformBuildID = "__BUILD_ID__";
+
+XULAppInfoService.prototype.QueryInterface =
+function appinfo_QueryInterface(iid)
+{
+    if (!iid.equals(nsIXULAppInfo) &&
+        !iid.equals(nsIXULRuntime) &&
+        !iid.equals(nsISupports))
+    {
+        throw Components.results.NS_ERROR_NO_INTERFACE;
+    }
+
+    return this;
+}
+
+var XULAppInfoFactory = new Object();
+
+XULAppInfoFactory.createInstance =
+function(outer, iid)
+{
+    if (outer != null)
+        throw Components.results.NS_ERROR_NO_AGGREGATION;
+
+    if (!iid.equals(nsIXULAppInfo) && !iid.equals(nsISupports))
+        throw Components.results.NS_ERROR_INVALID_ARG;
+
+    return new XULAppInfoService();
+}
+
+
+var XULAppInfoModule = new Object();
+
+XULAppInfoModule.registerSelf =
+function mod_registerSelf(compMgr, fileSpec, location, type)
+{
+    compMgr = compMgr.QueryInterface(nsIComponentRegistrar);
+
+    compMgr.registerFactoryLocation(XULAPPINFO_CID,
+                                    "XUL AppInfo service",
+                                    XULAPPINFO_CONTRACTID,
+                                    fileSpec, location, type);
+}
+
+XULAppInfoModule.unregisterSelf =
+function mod_unregisterSelf(compMgr, fileSpec, location)
+{
+}
+
+XULAppInfoModule.getClassObject =
+function mod_getClassObject(compMgr, cid, iid)
+{
+    if (cid.equals(XULAPPINFO_CID))
+        return XULAppInfoFactory;
+
+    if (!iid.equals(nsIFactory))
+        throw Components.results.NS_ERROR_NOT_IMPLEMENTED;
+
+    throw Components.results.NS_ERROR_NO_INTERFACE;
+}
+
+XULAppInfoModule.canUnload =
+function mod_canUnload(compMgr)
+{
+    return true;
+}
+
+/* entrypoint */
+function NSGetModule(compMgr, fileSpec)
+{
+    return XULAppInfoModule;
+}
