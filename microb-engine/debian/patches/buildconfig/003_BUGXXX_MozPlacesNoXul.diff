# Building places module without XUL (autocomplete module)
Index: mozilla/toolkit/components/places/src/Makefile.in
===================================================================
--- mozilla.orig/toolkit/components/places/src/Makefile.in
+++ mozilla/toolkit/components/places/src/Makefile.in
@@ -78,26 +78,31 @@
            microsummaries \
            $(NULL)
 
 CPPSRCS = \
           nsAnnoProtocolHandler.cpp \
           nsAnnotationService.cpp \
           nsFaviconService.cpp \
           nsNavHistory.cpp \
-          nsNavHistoryAutoComplete.cpp \
           nsNavHistoryExpire.cpp \
           nsNavHistoryQuery.cpp \
           nsNavHistoryResult.cpp \
           nsNavBookmarks.cpp \
           nsMaybeWeakPtr.cpp \
           nsMorkHistoryImporter.cpp \
           nsPlacesModule.cpp \
           $(NULL)
 
+ifdef MOZ_XUL
+CPPSRCS += \
+          nsNavHistoryAutoComplete.cpp \
+          $(NULL)
+endif
+
 EXTRA_DSO_LDOPTS += \
 	$(DEPTH)/db/morkreader/$(LIB_PREFIX)morkreader_s.$(LIB_SUFFIX) \
 	$(MOZ_UNICHARUTIL_LIBS) \
 	$(MOZ_COMPONENT_LIBS) \
 	$(NULL)
 
 LOCAL_INCLUDES += -I$(srcdir)/../../build
 
Index: mozilla/toolkit/components/places/src/nsNavHistory.cpp
===================================================================
--- mozilla.orig/toolkit/components/places/src/nsNavHistory.cpp
+++ mozilla/toolkit/components/places/src/nsNavHistory.cpp
@@ -180,18 +180,20 @@
 NS_INTERFACE_MAP_BEGIN(nsNavHistory)
   NS_INTERFACE_MAP_ENTRY(nsINavHistoryService)
   NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsIGlobalHistory2, nsIGlobalHistory3)
   NS_INTERFACE_MAP_ENTRY(nsIGlobalHistory3)
   NS_INTERFACE_MAP_ENTRY(nsIDownloadHistory)
   NS_INTERFACE_MAP_ENTRY(nsIBrowserHistory)
   NS_INTERFACE_MAP_ENTRY(nsIObserver)
   NS_INTERFACE_MAP_ENTRY(nsISupportsWeakReference)
+#ifdef MOZ_XUL
   NS_INTERFACE_MAP_ENTRY(nsIAutoCompleteSearch)
   NS_INTERFACE_MAP_ENTRY(nsIAutoCompleteSimpleResultListener)
+#endif
   NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsINavHistoryService)
 NS_INTERFACE_MAP_END
 
 static nsresult GetReversedHostname(nsIURI* aURI, nsAString& host);
 static void GetReversedHostname(const nsString& aForward, nsAString& aReversed);
 static void GetSubstringFromNthDot(const nsCString& aInput, PRInt32 aStartingSpot,
                                    PRInt32 aN, PRBool aIncludeDot,
                                    nsACString& aSubstr);
@@ -337,18 +339,20 @@
   }
   NS_ENSURE_SUCCESS(rv, rv);
 
 #ifdef IN_MEMORY_LINKS
   rv = InitMemDB();
   NS_ENSURE_SUCCESS(rv, rv);
 #endif
 
+#ifdef MOZ_XUL
   rv = InitAutoComplete();
   NS_ENSURE_SUCCESS(rv, rv);
+#endif
 
   // extract the last session ID so we know where to pick up. There is no index
   // over sessions so the naive statement "SELECT MAX(session) FROM
   // moz_historyvisits" won't have good performance. Instead we select the
   // session of the last visited page because we do have indices over dates.
   // We still do MAX(session) in case there are duplicate sessions for the same
   // date, but there will generally be very few (1) of these.
   {
@@ -1406,24 +1410,26 @@
     return NS_OK;
 
   mPrefBranch->GetIntPref(PREF_BROWSER_HISTORY_EXPIRE_DAYS_MAX, &mExpireDaysMax);
   mPrefBranch->GetIntPref(PREF_BROWSER_HISTORY_EXPIRE_DAYS_MIN, &mExpireDaysMin);
   if (NS_FAILED(mPrefBranch->GetIntPref(PREF_BROWSER_HISTORY_EXPIRE_SITES,
                                         &mExpireSites)))
     mExpireSites = EXPIRATION_CAP_SITES;
   
+#ifdef MOZ_XUL
   PRBool oldCompleteOnlyTyped = mAutoCompleteOnlyTyped;
   mPrefBranch->GetBoolPref(PREF_AUTOCOMPLETE_ONLY_TYPED,
                            &mAutoCompleteOnlyTyped);
   if (oldCompleteOnlyTyped != mAutoCompleteOnlyTyped) {
     // update the autocomplete statements if the option has changed.
     nsresult rv = CreateAutoCompleteQueries();
     NS_ENSURE_SUCCESS(rv, rv);
   }
+#endif
   return NS_OK;
 }
 
 
 // nsNavHistory::GetNow
 //
 //    This is a hack to avoid calling PR_Now() too often, as is the case when
 //    we're asked the ageindays of many history entries in a row. A timer is
Index: mozilla/toolkit/components/places/src/nsNavHistory.h
===================================================================
--- mozilla.orig/toolkit/components/places/src/nsNavHistory.h
+++ mozilla/toolkit/components/places/src/nsNavHistory.h
@@ -43,34 +43,38 @@
 #include "mozIStorageConnection.h"
 #include "mozIStorageValueArray.h"
 #include "mozIStorageStatement.h"
 #include "nsAutoPtr.h"
 #include "nsCOMArray.h"
 #include "nsCOMPtr.h"
 #include "nsDataHashtable.h"
 #include "nsINavHistoryService.h"
+#ifdef MOZ_XUL
 #include "nsIAutoCompleteSearch.h"
 #include "nsIAutoCompleteResult.h"
 #include "nsIAutoCompleteSimpleResult.h"
+#endif
 #include "nsIBrowserHistory.h"
 #include "nsICollation.h"
 #include "nsIDateTimeFormat.h"
 #include "nsIGlobalHistory.h"
 #include "nsIGlobalHistory3.h"
 #include "nsIDownloadHistory.h"
 #include "nsIPrefService.h"
 #include "nsIPrefBranch.h"
 #include "nsIObserver.h"
 #include "nsIObserverService.h"
 #include "nsServiceManagerUtils.h"
 #include "nsIStringBundle.h"
 #include "nsITimer.h"
+#ifdef MOZ_XUL
 #include "nsITreeSelection.h"
 #include "nsITreeView.h"
+#endif
 #include "nsString.h"
 #include "nsVoidArray.h"
 #include "nsWeakReference.h"
 #include "nsTArray.h"
 #include "nsINavBookmarksService.h"
 #include "nsMaybeWeakPtr.h"
 
 #include "nsNavHistoryExpire.h"
@@ -97,35 +101,39 @@
 
 // nsNavHistory
 
 class nsNavHistory : public nsSupportsWeakReference,
                      public nsINavHistoryService,
                      public nsIObserver,
                      public nsIBrowserHistory,
                      public nsIGlobalHistory3,
-                     public nsIDownloadHistory,
-                     public nsIAutoCompleteSearch,
+                     public nsIDownloadHistory
+#ifdef MOZ_XUL
+                     , public nsIAutoCompleteSearch,
                      public nsIAutoCompleteSimpleResultListener
+#endif
 {
   friend class AutoCompleteIntermediateResultSet;
   friend class AutoCompleteResultComparator;
 public:
   nsNavHistory();
 
   NS_DECL_ISUPPORTS
 
   NS_DECL_NSINAVHISTORYSERVICE
   NS_DECL_NSIGLOBALHISTORY2
   NS_DECL_NSIGLOBALHISTORY3
   NS_DECL_NSIDOWNLOADHISTORY
   NS_DECL_NSIBROWSERHISTORY
   NS_DECL_NSIOBSERVER
+#ifdef MOZ_XUL
   NS_DECL_NSIAUTOCOMPLETESEARCH
   NS_DECL_NSIAUTOCOMPLETESIMPLERESULTLISTENER
+#endif
 
   nsresult Init();
 
   /**
    * Used by other components in the places directory such as the annotation
    * service to get a reference to this history object. Returns a pointer to
    * the service if it exists. Otherwise creates one. Returns NULL on error.
    */
@@ -587,18 +595,20 @@
   nsCOMPtr<mozIStorageStatement> mDBTagAutoCompleteQuery; //  kAutoCompleteIndex_* results
 
   nsresult InitAutoComplete();
   nsresult CreateAutoCompleteQueries();
   PRBool mAutoCompleteOnlyTyped;
   nsCOMPtr<nsITimer> mAutoCompleteTimer;
 
   nsString mCurrentSearchString;
+#ifdef MOZ_XUL
   nsCOMPtr<nsIAutoCompleteObserver> mCurrentListener;
   nsCOMPtr<nsIAutoCompleteSimpleResult> mCurrentResult;
+#endif
   nsDataHashtable<nsStringHashKey, PRBool> mCurrentResultURLs;
   PRTime mCurrentChunkEndTime;
   PRTime mCurrentOldestVisit;
   PRBool mFirstChunk;
 
   nsDataHashtable<nsTrimInt64HashKey, PRBool> mLivemarkFeedItemIds;
   nsDataHashtable<nsStringHashKey, PRBool> mLivemarkFeedURIs;
 
Index: mozilla/toolkit/components/places/src/nsNavHistoryResult.cpp
===================================================================
--- mozilla.orig/toolkit/components/places/src/nsNavHistoryResult.cpp
+++ mozilla/toolkit/components/places/src/nsNavHistoryResult.cpp
@@ -52,17 +52,19 @@
 #include "nsIDateTimeFormat.h"
 #include "nsIDOMElement.h"
 #include "nsILocale.h"
 #include "nsILocaleService.h"
 #include "nsILocalFile.h"
 #include "nsIDynamicContainer.h"
 #include "nsIServiceManager.h"
 #include "nsISupportsPrimitives.h"
+#ifdef MOZ_XUL
 #include "nsITreeColumns.h"
+#endif
 #include "nsIURI.h"
 #include "nsIURL.h"
 #include "nsIWritablePropertyBag.h"
 #include "nsITaggingService.h"
 #include "nsNetUtil.h"
 #include "nsPrintfCString.h"
 #include "nsPromiseFlatString.h"
 #include "nsString.h"
