#extensions/spatialnavigation doesn't build with libxul and bsmedberg's latest landing
Index: content/base/src/nsContentList.h
===================================================================
--- content/base/src/nsContentList.h.orig
+++ content/base/src/nsContentList.h
@@ -41,17 +41,17 @@
  * getElementsByTagName, some properties on nsIDOMHTMLDocument, etc).
  */
 
 #ifndef nsContentList_h___
 #define nsContentList_h___
 
 #include "nsISupports.h"
 #include "nsCOMArray.h"
-#include "nsString.h"
+#include "nsStringGlue.h"
 #include "nsIDOMHTMLCollection.h"
 #include "nsIDOMNodeList.h"
 #include "nsStubMutationObserver.h"
 #include "nsIAtom.h"
 #include "nsINameSpaceManager.h"
 #include "nsCycleCollectionParticipant.h"
 
 // Magic namespace id that means "match all namespaces".  This is
Index: gfx/src/nsFont.cpp
===================================================================
--- gfx/src/nsFont.cpp.orig
+++ gfx/src/nsFont.cpp
@@ -31,27 +31,36 @@
  * decision by deleting the provisions above and replace them with the notice
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 #include "nsFont.h"
+#ifdef MOZILLA_INTERNAL_API
 #include "nsString.h"
+#else
+#include "nsStringAPI.h"
+#endif
 #include "nsUnicharUtils.h"
 #include "nsCRT.h"
 
 nsFont::nsFont(const char* aName, PRUint8 aStyle, PRUint8 aVariant,
                PRUint16 aWeight, PRUint8 aDecoration, nscoord aSize,
                float aSizeAdjust)
 {
+#ifdef MOZILLA_INTERNAL_API
   NS_ASSERTION(aName && IsASCII(nsDependentCString(aName)),
                "Must only pass ASCII names here");
   name.AssignASCII(aName);
+#else
+//  NS_ConvertASCIItoUTF16(NS_LITERAL_CSTRING(aName), name);
+  CopyASCIItoUTF16(NS_LITERAL_CSTRING(aName), name);
+#endif
   style = aStyle;
   systemFont = PR_FALSE;
   variant = aVariant;
   familyNameQuirks = PR_FALSE;
   weight = aWeight;
   decorations = aDecoration;
   size = aSize;
   sizeAdjust = aSizeAdjust;
@@ -96,17 +105,23 @@
 PRBool nsFont::BaseEquals(const nsFont& aOther) const
 {
   if ((style == aOther.style) &&
       (systemFont == aOther.systemFont) &&
       (familyNameQuirks == aOther.familyNameQuirks) &&
       (weight == aOther.weight) &&
       (size == aOther.size) &&
       (sizeAdjust == aOther.sizeAdjust) &&
-      name.Equals(aOther.name, nsCaseInsensitiveStringComparator())) {
+#ifdef MOZILLA_INTERNAL_API
+      name.Equals(aOther.name, nsCaseInsensitiveStringComparator())
+#else
+//FIXME
+      CaseInsensitiveCompare(NS_LossyConvertUTF16toASCII(name).get(), NS_LossyConvertUTF16toASCII(aOther.name).get(), 0)
+#endif
+      ) {
     return PR_TRUE;
   }
   return PR_FALSE;
 }
 
 PRBool nsFont::Equals(const nsFont& aOther) const
 {
   if (BaseEquals(aOther) &&
@@ -140,19 +155,26 @@
 
 const PRUnichar kNullCh       = PRUnichar('\0');
 const PRUnichar kSingleQuote  = PRUnichar('\'');
 const PRUnichar kDoubleQuote  = PRUnichar('\"');
 const PRUnichar kComma        = PRUnichar(',');
 
 PRBool nsFont::EnumerateFamilies(nsFontFamilyEnumFunc aFunc, void* aData) const
 {
+#ifdef MOZILLA_INTERNAL_API
   const PRUnichar *p, *p_end;
   name.BeginReading(p);
   name.EndReading(p_end);
+#else
+//nsTHashtable.cpp:46
+  const PRUnichar *p, *p_end;
+  PRUint32 len = NS_StringGetData(name, &p);
+  p_end = p + len;
+#endif
   nsAutoString family;
 
   while (p < p_end) {
     while (nsCRT::IsAsciiSpace(*p))
       if (++p == p_end)
         return PR_TRUE;
 
     PRBool generic;
@@ -176,17 +198,21 @@
 
     } else {
       // unquoted font family
       const PRUnichar *nameStart = p;
       while (++p != p_end && *p != kComma)
         /* nothing */ ;
 
       family = Substring(nameStart, p);
+#ifdef MOZILLA_INTERNAL_API
       family.CompressWhitespace(PR_FALSE, PR_TRUE);
+#else
+      CompressWhitespace(family);
+#endif
       generic = IsGenericFontFamily(family);
     }
 
     if (!family.IsEmpty() && !(*aFunc)(family, generic, aData))
       return PR_FALSE;
 
     ++p; // may advance past p_end
   }
Index: gfx/src/nsRect.cpp
===================================================================
--- gfx/src/nsRect.cpp.orig
+++ gfx/src/nsRect.cpp
@@ -31,17 +31,17 @@
  * decision by deleting the provisions above and replace them with the notice
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 #include "nsRect.h"
-#include "nsString.h"
+#include "nsStringGlue.h"
 #include "nsUnitConversion.h"
 #include "nsIDeviceContext.h"
 
 #ifdef MIN
 #undef MIN
 #endif
 
 #ifdef MAX
@@ -210,17 +210,17 @@
   nscoord bottom = NSToCoordRound(float(YMost()) / aScale);
   x = NSToCoordRound(float(x) / aScale);
   y = NSToCoordRound(float(y) / aScale);
   width = (right - x);
   height = (bottom - y);
   return *this;
 }
 
-#ifdef DEBUG
+#if defined(DEBUG) && defined(MOZILLA_INTERNAL_API)
 // Diagnostics
 
 FILE* operator<<(FILE* out, const nsRect& rect)
 {
   nsAutoString tmp;
 
   // Output the coordinates in fractional pixels so they're easier to read
   tmp.AppendLiteral("{");
Index: layout/base/nsPresContext.h
===================================================================
--- layout/base/nsPresContext.h.orig
+++ layout/base/nsPresContext.h
@@ -38,17 +38,17 @@
 /* a presentation of a document, part 1 */
 
 #ifndef nsPresContext_h___
 #define nsPresContext_h___
 
 #include "nsISupports.h"
 #include "nsColor.h"
 #include "nsCoord.h"
-#include "nsAString.h"
+#include "nsStringGlue.h"
 #include "nsCOMPtr.h"
 #include "nsIPresShell.h"
 #include "nsRect.h"
 #include "nsIDeviceContext.h"
 #include "nsFont.h"
 #include "nsIWeakReference.h"
 #include "nsITheme.h"
 #include "nsILanguageAtomService.h"
@@ -718,17 +718,19 @@
   static NS_HIDDEN_(int) PR_CALLBACK PrefChangedCallback(const char*, void*);
 
   NS_HIDDEN_(void) UpdateAfterPreferencesChanged();
   static NS_HIDDEN_(void) PR_CALLBACK PrefChangedUpdateTimerCallback(nsITimer *aTimer, void *aClosure);
 
   NS_HIDDEN_(void) GetUserPreferences();
   NS_HIDDEN_(void) GetFontPreferences();
 
+#ifdef MOZILLA_INTERNAL_API
   NS_HIDDEN_(void) UpdateCharSet(const nsAFlatCString& aCharSet);
+#endif
 
   // IMPORTANT: The ownership implicit in the following member variables
   // has been explicitly checked.  If you add any members to this class,
   // please make the ownership explicit (pinkerton, scc).
   
   nsPresContextType     mType;
   nsIPresShell*         mShell;         // [WEAK]
   nsCOMPtr<nsIDocument> mDocument;
Index: layout/style/nsCSSValue.h
===================================================================
--- layout/style/nsCSSValue.h.orig
+++ layout/style/nsCSSValue.h
@@ -36,17 +36,17 @@
  * ***** END LICENSE BLOCK ***** */
 
 /* representation of simple property values within CSS declarations */
 
 #ifndef nsCSSValue_h___
 #define nsCSSValue_h___
 
 #include "nsColor.h"
-#include "nsString.h"
+#include "nsStringGlue.h"
 #include "nsCoord.h"
 #include "nsCSSProperty.h"
 #include "nsUnitConversion.h"
 #include "nsIURI.h"
 #include "nsCOMPtr.h"
 #include "nsAutoPtr.h"
 #include "nsCRTGlue.h"
 #include "nsStringBuffer.h"
Index: xpcom/ds/nsHashtable.h
===================================================================
--- xpcom/ds/nsHashtable.h.orig
+++ xpcom/ds/nsHashtable.h
@@ -51,17 +51,17 @@
  */
 
 #ifndef nsHashtable_h__
 #define nsHashtable_h__
 
 #include "pldhash.h"
 #include "prlock.h"
 #include "nscore.h"
-#include "nsString.h"
+#include "nsStringGlue.h"
 #include "nsISupportsBase.h"
 #include "nsTraceRefcnt.h"
 
 class nsIObjectInputStream;
 class nsIObjectOutputStream;
 
 class nsHashtable;
 class nsStringKey;
@@ -423,17 +423,21 @@
     enum Ownership {
         NEVER_OWN,  // very long lived, even clones don't need to copy it.
         OWN_CLONE,  // as long lived as this key. But clones make a copy.
         OWN         // to be free'd in key dtor. Clones make their own copy.
     };
 
     nsStringKey(const nsStringKey& aKey);
     nsStringKey(const PRUnichar* str, PRInt32 strLen = -1, Ownership own = OWN_CLONE);
+#ifdef MOZILLA_INTERNAL_API
     nsStringKey(const nsAFlatString& str);
+#else
+    nsStringKey(const nsString& str);
+#endif
     nsStringKey(const nsAString& str);
     ~nsStringKey(void);
 
     PRUint32 HashCode(void) const;
     PRBool Equals(const nsHashKey* aKey) const;
     nsHashKey* Clone() const;
     nsStringKey(nsIObjectInputStream* aStream, nsresult *aResult);
     nsresult Write(nsIObjectOutputStream* aStream) const;
Index: content/html/content/public/nsIForm.h
===================================================================
--- content/html/content/public/nsIForm.h.orig
+++ content/html/content/public/nsIForm.h
@@ -33,17 +33,17 @@
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 #ifndef nsIForm_h___
 #define nsIForm_h___
 
 #include "nsISupports.h"
-#include "nsAString.h"
+#include "nsStringGlue.h"
 
 class nsIFormControl;
 class nsISimpleEnumerator;
 class nsIURI;
 template<class T> class nsTArray;
 
 #define NS_FORM_METHOD_GET  0
 #define NS_FORM_METHOD_POST 1
Index: embedding/components/windowwatcher/public/nsPromptUtils.h
===================================================================
--- embedding/components/windowwatcher/public/nsPromptUtils.h.orig
+++ embedding/components/windowwatcher/public/nsPromptUtils.h
@@ -35,16 +35,19 @@
  *
  * ***** END LICENSE BLOCK ***** */
 
 #ifndef NSPROMPTUTILS_H_
 #define NSPROMPTUTILS_H_
 
 #include "nsIHttpChannel.h"
 
+#ifndef kNotFound
+#define kNotFound -1
+#endif
 /**
  * @file
  * This file defines some helper functions that simplify interaction
  * with authentication prompts.
  */
 
 /**
  * Given a username (possibly in DOMAIN\user form) and password, parses the
@@ -159,14 +162,14 @@
   nsAutoString realm;
   aAuthInfo->GetRealm(realm);
   
   // Now assemble the key: host:port (realm)
   key.Append(host);
   key.Append(':');
   key.AppendInt(port);
   key.AppendLiteral(" (");
-  AppendUTF16toUTF8(realm, key);
+	key.Append(NS_ConvertUTF16toUTF8(realm));
   key.Append(')');
 }
 
 #endif
 
Index: toolkit/toolkit-tiers.mk
===================================================================
--- toolkit/toolkit-tiers.mk.orig
+++ toolkit/toolkit-tiers.mk
@@ -233,34 +233,34 @@
 tier_toolkit_dirs += extensions/pref
 endif
 
 # JavaXPCOM JNI code is compiled into libXUL
 ifdef MOZ_JAVAXPCOM
 tier_toolkit_dirs += extensions/java/xpcom/src
 endif
 
-ifndef BUILD_STATIC_LIBS
-ifdef MOZ_XUL_APP
-ifneq (,$(MOZ_ENABLE_GTK2))
-tier_toolkit_dirs += embedding/browser/gtk
-endif
-endif
-endif
-
 ifdef MOZ_XUL_APP
 ifndef BUILD_STATIC_LIBS
 tier_toolkit_dirs += toolkit/library
 endif
 endif
 
 ifdef MOZ_ENABLE_LIBXUL
 tier_toolkit_dirs += xpcom/stub
 endif
 
+ifndef BUILD_STATIC_LIBS
+ifdef MOZ_XUL_APP
+ifneq (,$(MOZ_ENABLE_GTK)$(MOZ_ENABLE_GTK2))
+tier_toolkit_dirs += embedding/browser/gtk
+endif
+endif
+endif
+
 ifdef NS_TRACE_MALLOC
 tier_toolkit_dirs += tools/trace-malloc
 endif
 
 ifdef MOZ_LDAP_XPCOM
 tier_toolkit_staticdirs += directory/c-sdk
 tier_toolkit_dirs	+= directory/xpcom
 endif
