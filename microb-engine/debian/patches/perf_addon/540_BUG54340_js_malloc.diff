diff -Naur mozilla.old/js/src/jsapi.c mozilla/js/src/jsapi.c
--- mozilla.old/js/src/jsapi.c	2007-04-17 11:44:02.000000000 +0000
+++ mozilla/js/src/jsapi.c	2007-04-22 15:33:37.000000000 +0000
@@ -41,6 +41,7 @@
 /*
  * JavaScript API.
  */
+
 #include "jsstddef.h"
 #include <ctype.h>
 #include <stdarg.h>
@@ -1663,42 +1664,6 @@
     return js_GetScopeChain(cx, fp);
 }
 
-JS_PUBLIC_API(void *)
-JS_malloc(JSContext *cx, size_t nbytes)
-{
-    void *p;
-
-    JS_ASSERT(nbytes != 0);
-    JS_COUNT_OPERATION(cx, JSOW_ALLOCATION);
-    if (nbytes == 0)
-        nbytes = 1;
-
-    p = malloc(nbytes);
-    if (!p) {
-        JS_ReportOutOfMemory(cx);
-        return NULL;
-    }
-    js_UpdateMallocCounter(cx, nbytes);
-
-    return p;
-}
-
-JS_PUBLIC_API(void *)
-JS_realloc(JSContext *cx, void *p, size_t nbytes)
-{
-    JS_COUNT_OPERATION(cx, JSOW_ALLOCATION);
-    p = realloc(p, nbytes);
-    if (!p)
-        JS_ReportOutOfMemory(cx);
-    return p;
-}
-
-JS_PUBLIC_API(void)
-JS_free(JSContext *cx, void *p)
-{
-    if (p)
-        free(p);
-}
 
 JS_PUBLIC_API(char *)
 JS_strdup(JSContext *cx, const char *s)
@@ -4960,6 +4925,48 @@
 }
 #endif
 
+/* Exportable symbols */
+#undef JS_malloc
+#undef JS_realloc
+#undef JS_free
+
+JS_PUBLIC_API(void *)
+JS_malloc(JSContext *cx, size_t nbytes)
+{
+    void *p;
+
+    JS_ASSERT(nbytes != 0);
+    JS_COUNT_OPERATION(cx, JSOW_ALLOCATION);
+    if (nbytes == 0)
+        nbytes = 1;
+
+    p = malloc(nbytes);
+    if (!p) {
+        JS_ReportOutOfMemory(cx);
+        return NULL;
+    }
+    js_UpdateMallocCounter(cx, nbytes);
+
+    return p;
+}
+
+JS_PUBLIC_API(void *)
+JS_realloc(JSContext *cx, void *p, size_t nbytes)
+{
+    JS_COUNT_OPERATION(cx, JSOW_ALLOCATION);
+    p = realloc(p, nbytes);
+    if (!p)
+        JS_ReportOutOfMemory(cx);
+    return p;
+}
+
+JS_PUBLIC_API(void)
+JS_free(JSContext *cx, void *p)
+{
+    if (p)
+        free(p);
+}
+
 /************************************************************************/
 
 #if defined(XP_WIN)
diff -Naur mozilla.old/js/src/jsapi.h mozilla/js/src/jsapi.h
--- mozilla.old/js/src/jsapi.h	2007-04-17 11:44:03.000000000 +0000
+++ mozilla/js/src/jsapi.h	2007-04-22 17:13:53.000000000 +0000
@@ -638,6 +638,18 @@
 extern JS_PUBLIC_API(JSObject *)
 JS_GetScopeChain(JSContext *cx);
 
+
+#ifdef __arm__
+
+/* Speed up most useful memory operations: js_UpdateMallocCounter and JS_ReportOutOfMemory can be avoid */
+
+#define JS_malloc(cx,nbytes)     malloc(nbytes)
+#define JS_realloc(cx,p,nbytes)  realloc(p,nbytes)
+#define JS_free(cx,p)            free(p)
+
+#else
+
+/* Prototypes */
 extern JS_PUBLIC_API(void *)
 JS_malloc(JSContext *cx, size_t nbytes);
 
@@ -647,6 +659,8 @@
 extern JS_PUBLIC_API(void)
 JS_free(JSContext *cx, void *p);
 
+#endif /* if 1 for JS_malloc/JS_free prototypes */
+
 extern JS_PUBLIC_API(char *)
 JS_strdup(JSContext *cx, const char *s);
 

