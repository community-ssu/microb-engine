# Patches for microb-engine
# Oleg Romashin <oleg.romashin@nokia.com>
# DP: Avoid needing zip if not required. bz#331785. Debian patchset

=== configure.in
==================================================================
Index: mozilla/configure.in
===================================================================
--- mozilla.orig/configure.in
+++ mozilla/configure.in
@@ -6697,16 +6697,24 @@
 
 if test "$MOZ_CHROME_FILE_FORMAT" != "jar" && 
     test "$MOZ_CHROME_FILE_FORMAT" != "flat" &&
     test "$MOZ_CHROME_FILE_FORMAT" != "symlink" &&
     test "$MOZ_CHROME_FILE_FORMAT" != "both"; then
     AC_MSG_ERROR([--enable-chrome-format must be set to either jar, flat, both, or symlink])
 fi
 
+if test "$MOZ_CHROME_FILE_FORMAT" = "jar" ||
+    test "$MOZ_CHROME_FILE_FORMAT" = "both"; then
+    AC_PATH_PROGS(ZIP, zip)
+    if test -z "$ZIP" || test "$ZIP" = ":"; then
+        AC_MSG_ERROR([zip not found in \$PATH])
+    fi
+fi
+
 dnl ========================================================
 dnl = Define default location for MOZILLA_FIVE_HOME
 dnl ========================================================
 MOZ_ARG_WITH_STRING(default-mozilla-five-home,
 [  --with-default-mozilla-five-home
                           Set the default value for MOZILLA_FIVE_HOME],
 [ val=`echo $withval`
   AC_DEFINE_UNQUOTED(MOZ_DEFAULT_MOZILLA_FIVE_HOME,"$val") ])
Index: mozilla/config/config.mk
===================================================================
--- mozilla.orig/config/config.mk
+++ mozilla/config/config.mk
@@ -438,20 +438,24 @@
         -D_IMPL_NS_WIDGET \
         $(NULL)
 endif
 endif
 
 # Flags passed to make-jars.pl
 
 MAKE_JARS_FLAGS = \
-	-s $(srcdir) -t $(topsrcdir) -z $(ZIP) -p $(MOZILLA_DIR)/config/preprocessor.pl \
+	-s $(srcdir) -t $(topsrcdir) -p $(MOZILLA_DIR)/config/preprocessor.pl \
 	-f $(MOZ_CHROME_FILE_FORMAT) \
 	$(NULL)
 
+ifdef ZIP
+MAKE_JARS_FLAGS += -z $(ZIP)
+endif
+
 ifdef NO_JAR_AUTO_REG
 MAKE_JARS_FLAGS += -a
 endif
 
 ifdef USE_EXTENSION_MANIFEST
 MAKE_JARS_FLAGS += -e
 endif
 
Index: mozilla/config/make-jars.pl
===================================================================
--- mozilla.orig/config/make-jars.pl
+++ mozilla/config/make-jars.pl
@@ -132,17 +132,17 @@
     $force_x11 = 1;
 }
 
 my $zipprog = $ENV{ZIP};
 if (defined($::opt_z)) {
     $zipprog = $::opt_z;
 }
 
-if ($zipprog eq "") {
+if (($fileformat eq "jar" || $fileformat eq "both") && $zipprog eq "") {
     print "A valid zip program must be given via the -z option or the ZIP environment variable. Exiting.\n";
     exit(1);
 }
 
 my $force_os;
 if (defined($::opt_o)) {
     $force_os = $::opt_o;
 }
@@ -528,41 +528,44 @@
         my @manifestLines;
 
         print "+++ making chrome $cwd  => $jarDir/$jarfile.jar\n";
         while (defined($_ = shift @gLines)) {
             if (/^\s+([\w\d.\-\_\\\/\+]+)\s*(\(\%?[\w\d.\-\_\\\/]+\))?$\s*/) {
                 my $dest = $1;
                 my $srcPath = defined($2) ? substr($2, 1, -1) : $2;
                 EnsureFileInDir("$chromeDir/$jarfile", $baseFilesDir, $dest, $srcPath, 0, 0);
+                EnsureFileInDir("$jarDir/$jarfile", $baseFilesDir, $dest, $srcPath, 0, 0) if ($fileformat eq "flat");
                 $args = "$args$dest ";
                 if (!foreignPlatformFile($jarfile) && !foreignPlatformPath($dest) && $autoreg &&
                     $dest =~ /([\w\d.\-\_\+]+)\/([\w\d.\-\_\\\/]+)contents.rdf/)
                 {
                     my $chrome_type = $1;
                     my $pkg_name = $2;
                     RegIt($chromeDir, $jarfile, $chrome_type, $pkg_name);
                 }
             } elsif (/^\+\s+([\w\d.\-\_\\\/\+]+)\s*(\(\%?[\w\d.\-\_\\\/]+\))?$\s*/) {
                 my $dest = $1;
                 my $srcPath = defined($2) ? substr($2, 1, -1) : $2;
                 EnsureFileInDir("$chromeDir/$jarfile", $baseFilesDir, $dest, $srcPath, 1, 0);
+                EnsureFileInDir("$jarDir/$jarfile", $baseFilesDir, $dest, $srcPath, 1, 0) if ($fileformat eq "flat");
                 $overrides = "$overrides$dest ";
                 if (!foreignPlatformFile($jarfile) && !foreignPlatformPath($dest) && $autoreg &&
                     $dest =~ /([\w\d.\-\_\+]+)\/([\w\d.\-\_\\\/]+)contents.rdf/)
                 {
                     my $chrome_type = $1;
                     my $pkg_name = $2;
                     RegIt($chromeDir, $jarfile, $chrome_type, $pkg_name);
                 }
             } elsif (/^\*\+?\s+([\w\d.\-\_\\\/\+]+)\s*(\(\%?[\w\d.\-\_\\\/]+\))?$\s*/) {
                 # preprocessed (always override)
                 my $dest = $1;
                 my $srcPath = defined($2) ? substr($2, 1, -1) : $2;
                 EnsureFileInDir("$chromeDir/$jarfile", $baseFilesDir, $dest, $srcPath, 1, 1);
+                EnsureFileInDir("$jarDir/$jarfile", $baseFilesDir, $dest, $srcPath, 1, 1) if ($fileformat eq "flat");
                 $overrides = "$overrides$dest ";
                 if (!foreignPlatformFile($jarfile) && !foreignPlatformPath($dest) && $autoreg &&
                     $dest =~ /([\w\d.\-\_\+]+)\/([\w\d.\-\_\\\/]+)contents.rdf/)
                 {
                     my $chrome_type = $1;
                     my $pkg_name = $2;
                     RegIt($chromeDir, $jarfile, $chrome_type, $pkg_name);
                 }
