Index: mozilla/modules/libpr0n/decoders/png/nsPNGDecoder.cpp
===================================================================
--- mozilla.orig/modules/libpr0n/decoders/png/nsPNGDecoder.cpp
+++ mozilla/modules/libpr0n/decoders/png/nsPNGDecoder.cpp
@@ -112,16 +112,18 @@
         112,  72,  89, 115, '\0',   /* pHYs */
         115,  66,  73,  84, '\0',   /* sBIT */
         115,  80,  76,  84, '\0',   /* sPLT */
         116,  69,  88, 116, '\0',   /* tEXt */
         116,  73,  77,  69, '\0',   /* tIME */
         122,  84,  88, 116, '\0'};  /* zTXt */
 #endif
 
+  NS_GetMemoryManager(getter_AddRefs(mMem));
+
   mImageLoad = aLoad;
   mObserver = do_QueryInterface(aLoad);  // we're holding 2 strong refs to the request.
 
   /* do png init stuff */
 
   /* Initialize the container's source image header. */
   /* Always decode to 24 bit pixdepth */
 
@@ -408,16 +410,24 @@
    * where old_row is what was displayed for previous rows.  Note
    * that the first pass (pass == 0 really) will completely cover
    * the old row, so the rows do not have to be initialized.  After
    * the first pass (and only for interlaced images), you will have
    * to pass the current row, and the function will combine the
    * old row and the new row.
    */
   nsPNGDecoder *decoder = NS_STATIC_CAST(nsPNGDecoder*, png_get_progressive_ptr(png_ptr));
+  PRBool lowMem = PR_FALSE;
+  if (decoder->mMem && NS_SUCCEEDED(decoder->mMem->IsLowMemory(&lowMem)) && lowMem) {
+    if (!decoder->mError) {
+      decoder->mError = PR_TRUE;
+      end_callback(png_ptr, nsnull);
+    }
+    return;
+  }
 
   png_bytep line;
   if (decoder->interlacebuf) {
     line = decoder->interlacebuf+(row_num*decoder->ibpr);
     png_progressive_combine_row(png_ptr, line, new_row);
   }
   else
     line = new_row;
Index: mozilla/modules/libpr0n/decoders/png/nsPNGDecoder.h
===================================================================
--- mozilla.orig/modules/libpr0n/decoders/png/nsPNGDecoder.h
+++ mozilla/modules/libpr0n/decoders/png/nsPNGDecoder.h
@@ -78,11 +78,12 @@
   png_structp mPNG;
   png_infop mInfo;
 #ifndef MOZ_CAIRO_GFX
   PRUint8 *colorLine, *alphaLine;
 #endif
   PRUint8 *interlacebuf;
   PRUint32 ibpr;
   PRPackedBool mError;
+  nsCOMPtr<nsIMemory> mMem;
 };
 
 #endif // nsPNGDecoder_h__
