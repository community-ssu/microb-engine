--- mozilla/chrome/src/nsChromeRegistry.h.orig	2007-03-27 18:33:37.000000000 +0300
+++ mozilla/chrome/src/nsChromeRegistry.h	2007-11-26 12:10:18.000000000 +0200
@@ -113,17 +113,17 @@ protected:
   void FlushAllCaches();
 
 private:
   static nsresult RefreshWindow(nsIDOMWindowInternal* aWindow,
                                 nsICSSLoader* aCSSLoader);
   static nsresult GetProviderAndPath(nsIURL* aChromeURL,
                                      nsACString& aProvider, nsACString& aPath);
 
-#ifdef MOZ_XUL
+#ifdef MOZ_RDF
   NS_HIDDEN_(void) ProcessProvider(PRFileDesc *fd, nsIRDFService* aRDFs,
                                    nsIRDFDataSource* ds, nsIRDFResource* aRoot,
                                    PRBool aIsLocale, const nsACString& aBaseURL);
   NS_HIDDEN_(void) ProcessOverlays(PRFileDesc *fd, nsIRDFDataSource* ds,
                                    nsIRDFResource* aRoot,
                                    const nsCSubstring& aType);
 #endif
 
--- mozilla/chrome/src/nsChromeRegistry.cpp.orig	2007-11-26 11:51:52.000000000 +0200
+++ mozilla/chrome/src/nsChromeRegistry.cpp	2007-11-26 12:10:03.000000000 +0200
@@ -97,17 +97,17 @@
 #include "nsISupportsArray.h"
 #include "nsIVersionComparator.h"
 #include "nsIWindowMediator.h"
 #include "nsIXPConnect.h"
 #include "nsIXULAppInfo.h"
 #include "nsIXULRuntime.h"
 #include "nsPresShellIterator.h"
 
-#ifdef MOZ_XUL
+#ifdef MOZ_RDF
 // keep all the RDF stuff together, in case we can remove it in the far future
 #include "rdf.h"
 #include "nsRDFCID.h"
 #include "nsIRDFService.h"
 #include "nsIRDFDataSource.h"
 #include "nsIRDFObserver.h"
 #include "nsIRDFRemoteDataSource.h"
 #include "nsIRDFXMLSink.h"
@@ -1407,17 +1407,17 @@ NS_IMETHODIMP nsChromeRegistry::Observe(
   }
   else {
     NS_ERROR("Unexpected observer topic!");
   }
 
   return rv;
 }
 
-#ifdef MOZ_XUL
+#ifdef MOZ_RDF
 static nsresult
 GetContainerEnumerator(nsIRDFDataSource* ds, nsIRDFResource* res,
                        nsISimpleEnumerator* *aResult, PRInt32 *aCountResult = nsnull)
 {
   nsresult rv;
 
   nsCOMPtr<nsIRDFContainer> container
     (do_CreateInstance("@mozilla.org/rdf/container;1"));
@@ -1805,27 +1805,27 @@ nsChromeRegistry::ProcessOverlays(PRFile
 
       overlayName.Insert(aType + kTab + overlaidName + kTab, 0);
       overlayName.Append(kLinebreak);
       PR_Write(fd, overlayName.get(), overlayName.Length());
     }
   }
 }
 
-#else // MOZ_XUL
+#else // MOZ_RDF
 
 NS_IMETHODIMP
 nsChromeRegistry::ProcessContentsManifest(nsIURI* aOldManifest, nsIURI* aFile,
                                           nsIURI* aBaseURI, PRBool aAppend,
                                           PRBool aSkinOnly)
 {
   return NS_ERROR_NOT_IMPLEMENTED;
 }
 
-#endif // MOZ_XUL
+#endif // MOZ_RDF
 
 nsresult
 nsChromeRegistry::ProcessManifest(nsILocalFile* aManifest, PRBool aSkinOnly)
 {
   nsresult rv;
 
   PRFileDesc* fd;
   rv = aManifest->OpenNSPRFileDesc(PR_RDONLY, 0, &fd);
