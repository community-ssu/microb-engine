Index: mozilla/xpinstall/src/nsXPInstallManager.cpp
===================================================================
--- mozilla.orig/xpinstall/src/nsXPInstallManager.cpp
+++ mozilla/xpinstall/src/nsXPInstallManager.cpp
@@ -347,20 +347,22 @@
     return rv;
 }
 
 
 NS_IMETHODIMP
 nsXPInstallManager::ConfirmInstall(nsIDOMWindow *aParent, const PRUnichar **aPackageList, PRUint32 aCount, PRBool *aRetval)
 {
     *aRetval = PR_FALSE;
+    nsresult rv = NS_ERROR_NOT_IMPLEMENTED;
 
+#ifdef MOZ_XUL
     nsCOMPtr<nsIDOMWindowInternal> parentWindow( do_QueryInterface(aParent) );
     nsCOMPtr<nsIDialogParamBlock> params;
-    nsresult rv = LoadParams( aCount, aPackageList, getter_AddRefs(params) );
+    rv = LoadParams( aCount, aPackageList, getter_AddRefs(params) );
 
     if ( NS_SUCCEEDED(rv) && parentWindow && params)
     {
         nsCOMPtr<nsIDOMWindow> newWindow;
 
         nsCOMPtr<nsISupportsInterfacePointer> ifptr =
             do_CreateInstance(NS_SUPPORTS_INTERFACE_POINTER_CONTRACTID, &rv);
         NS_ENSURE_SUCCESS(rv, rv);
@@ -387,16 +389,17 @@
         if (NS_SUCCEEDED(rv))
         {
             //Now get which button was pressed from the ParamBlock
             PRInt32 buttonPressed = 0;
             params->GetInt( 0, &buttonPressed );
             *aRetval = buttonPressed ? PR_FALSE : PR_TRUE;
         }
     }
+#endif
 
     return rv;
 }
 
 #ifdef ENABLE_SKIN_SIMPLE_INSTALLATION_UI
 PRBool nsXPInstallManager::ConfirmChromeInstall(nsIDOMWindowInternal* aParentWindow, const PRUnichar **aPackage)
 {
     // get the dialog strings
@@ -454,19 +457,21 @@
 
     return bInstall;
 }
 #endif
 
 NS_IMETHODIMP
 nsXPInstallManager::OpenProgressDialog(const PRUnichar **aPackageList, PRUint32 aCount, nsIObserver *aObserver)
 {
+    nsresult rv = NS_ERROR_NOT_IMPLEMENTED;
+#ifdef MOZ_XUL
     // --- convert parameters into nsISupportArray members
     nsCOMPtr<nsIDialogParamBlock> list;
-    nsresult rv = LoadParams( aCount, aPackageList, getter_AddRefs(list) );
+    rv = LoadParams( aCount, aPackageList, getter_AddRefs(list) );
     if (NS_FAILED(rv))
         return rv;
 
     nsCOMPtr<nsISupportsInterfacePointer> listwrap(do_CreateInstance(NS_SUPPORTS_INTERFACE_POINTER_CONTRACTID));
     if (listwrap) {
         listwrap->SetData(list);
         listwrap->SetDataIID(&NS_GET_IID(nsIDialogParamBlock));
     }
@@ -522,16 +527,17 @@
 
     nsCOMPtr<nsIDOMWindow> newWindow;
     rv = wwatch->OpenWindow(0, 
                             statusDialogURL,
                             "_blank", 
                             "chrome,centerscreen,titlebar,dialog=no,resizable",
                             params, 
                             getter_AddRefs(newWindow));
+#endif
 
     return rv;
 }
 
 
 NS_IMETHODIMP nsXPInstallManager::Observe( nsISupports *aSubject,
                                            const char *aTopic,
                                            const PRUnichar *aData )
Index: mozilla/xpinstall/public/xpinstall.js
===================================================================
--- mozilla.orig/xpinstall/public/xpinstall.js
+++ mozilla/xpinstall/public/xpinstall.js
@@ -1,2 +1,2 @@
 pref("xpinstall.enabled",       true);
-pref("xpinstall.whitelist.required", true);
+pref("xpinstall.whitelist.required", false);
