Index: mozilla/widget/src/gtk2/nsLookAndFeel.cpp
===================================================================
--- mozilla.orig/widget/src/gtk2/nsLookAndFeel.cpp
+++ mozilla/widget/src/gtk2/nsLookAndFeel.cpp
@@ -295,16 +295,20 @@
         aColor = GDK_COLOR_TO_NS_RGB(mStyle->text[GTK_STATE_ACTIVE]);
         break;
     case eColor__moz_menuhover:
         aColor = sMenuHover;
         break;
     case eColor__moz_menuhovertext:
         aColor = sMenuHoverText;
         break;
+    case eColor__moz_mac_focusring:
+        //default focusring color value
+        aColor = GDK_COLOR_TO_NS_RGB(mStyle->dark[GTK_STATE_SELECTED]);
+        break;
     default:
         /* default color is BLACK */
         aColor = 0;
         res    = NS_ERROR_FAILURE;
         break;
     }
 
     return res;
--- mozilla/layout/base/nsPresShell.cpp.orig	2007-07-13 14:41:17.000000000 +0300
+++ mozilla/layout/base/nsPresShell.cpp	2007-07-13 14:41:29.000000000 +0300
@@ -2051,37 +2050,37 @@ nsresult PresShell::SetPrefFocusRules(vo
       PRUint8 focusRingWidth = mPresContext->FocusRingWidth();
       PRBool focusRingOnAnything = mPresContext->GetFocusRingOnAnything();
 
       if ((NS_SUCCEEDED(result) && focusRingWidth != 1 && focusRingWidth <= 4 ) || focusRingOnAnything) {
         PRUint32 index = 0;
         nsAutoString strRule;
         if (!focusRingOnAnything)
           strRule.AppendLiteral("*|*:link:focus, *|*:visited");    // If we only want focus rings on the normal things like links
         strRule.AppendLiteral(":focus {outline: ");     // For example 3px dotted WindowText (maximum 4)
         strRule.AppendInt(focusRingWidth);
-        strRule.AppendLiteral("px dotted WindowText !important; } ");     // For example 3px dotted WindowText
+        strRule.AppendLiteral("px solid -moz-mac-focusring !important; -moz-outline-radius: .3em;  -moz-outline-offset: .05em; } ");     // For example 3px dotted WindowText
         // insert the rules
         result = sheet->InsertRule(strRule, sInsertPrefSheetRulesAt, &index);
         NS_ENSURE_SUCCESS(result, result);
         if (focusRingWidth != 1) {
           // If the focus ring width is different from the default, fix buttons with rings
           strRule.AssignLiteral("button::-moz-focus-inner, input[type=\"reset\"]::-moz-focus-inner,");
           strRule.AppendLiteral("input[type=\"button\"]::-moz-focus-inner, ");
           strRule.AppendLiteral("input[type=\"submit\"]::-moz-focus-inner { padding: 1px 2px 1px 2px; border: ");
           strRule.AppendInt(focusRingWidth);
-          strRule.AppendLiteral("px dotted transparent !important; } ");
+          strRule.AppendLiteral("px solid transparent !important; } ");
           result = sheet->InsertRule(strRule, sInsertPrefSheetRulesAt, &index);
           NS_ENSURE_SUCCESS(result, result);
           
-          strRule.AssignLiteral("button:focus::-moz-focus-inner, input[type=\"reset\"]:focus::-moz-focus-inner,");
+/*          strRule.AssignLiteral("button:focus::-moz-focus-inner, input[type=\"reset\"]:focus::-moz-focus-inner,");
           strRule.AppendLiteral("input[type=\"button\"]:focus::-moz-focus-inner, input[type=\"submit\"]:focus::-moz-focus-inner {");
-          strRule.AppendLiteral("border-color: ButtonText !important; }");
+          strRule.AppendLiteral("border-color: -moz-mac-focusring !important; }");*/
           result = sheet->InsertRule(strRule, sInsertPrefSheetRulesAt, &index);
         }
       }
     }
   }
   return result;
 }
 
 void
 PresShell::AddUserSheet(nsISupports* aSheet)
