Index: mozilla/content/html/content/src/nsHTMLInputElement.cpp
===================================================================
--- mozilla.orig/content/html/content/src/nsHTMLInputElement.cpp
+++ mozilla/content/html/content/src/nsHTMLInputElement.cpp
@@ -105,16 +105,17 @@
 #include "nsILocalFile.h"
 #include "nsIFileStreams.h"
 #include "nsNetUtil.h"
 
 // input type=image
 #include "nsImageLoadingContent.h"
 #include "nsIDOMWindowInternal.h"
 
+#include "nsIViewManager.h"
 // XXX align=left, hspace, vspace, border? other nav4 attrs
 
 static NS_DEFINE_CID(kXULControllersCID,  NS_XULCONTROLLERS_CID);
 //
 // Accessors for mBitField
 //
 #define BF_DISABLED_CHANGED 0
 #define BF_HANDLING_CLICK 1
@@ -1136,16 +1137,74 @@
   }
 
   return NS_OK;
 }
 
 NS_IMETHODIMP
 nsHTMLInputElement::Focus()
 {
+  nsCOMPtr<nsIPrefBranch> prefBranch = do_GetService(NS_PREFSERVICE_CONTRACTID);
+  if(!prefBranch)
+    return NS_ERROR_FAILURE;
+  PRBool enabled = PR_TRUE;
+  nsresult rv = prefBranch->GetBoolPref("browser.display.jsfocus_for_visible_area", &enabled);
+  if(enabled == PR_FALSE)
+  {
+    if (ShouldFocus(this)) {
+      SetElementFocus(PR_TRUE);
+    }
+  }
+
+  nsPresContext *presContext = GetPresContext();
+  if(!presContext)
+    return NS_ERROR_FAILURE;
+
+  nsRect varea = presContext->GetVisibleArea();
+  varea.y = presContext->AppUnitsToDevPixels(varea.y);
+  varea.height = presContext->AppUnitsToDevPixels(varea.height);
+
+  nsCOMPtr<nsIPresShell> presShell = presContext->GetPresShell();
+  if(!presShell)
+    return NS_ERROR_FAILURE;
+
+  nsIFrame* frame = nsnull;
+  nsCOMPtr<nsIContent> iContent = NS_STATIC_CAST(nsIContent*, this);
+  frame = presShell->GetPrimaryFrameFor(iContent);
+  if(!frame)
+    return NS_ERROR_FAILURE;
+
+  nsRect frameRect;
+  frameRect.SetRect(0,0,0,0);
+
+  nsPoint offset;
+  frameRect = frame->GetRect();
+  PRInt32 frame_height = presContext->AppUnitsToDevPixels(frameRect.height);
+  nsIView* view;
+  frame->GetOffsetFromView(offset, &view);
+
+  nsIView* rootView = nsnull;
+  if (view) {
+      nsIViewManager* viewManager = view->GetViewManager();
+      NS_ASSERTION(viewManager, "View must have a viewmanager");
+      viewManager->GetRootView(rootView);
+  }
+  while (view) {
+      offset  += view->GetPosition();
+      if (view == rootView) {
+            break;
+      }
+    view = view->GetParent();
+  }
+
+  frameRect.MoveTo(offset);
+  frameRect.y = presContext->AppUnitsToDevPixels(frameRect.y);
+  frameRect.height = presContext->AppUnitsToDevPixels(frameRect.height);
+
+  if(frameRect.y>=0 && (frameRect.y+frameRect.height)<=(varea.y+varea.height))
   if (ShouldFocus(this)) {
     SetElementFocus(PR_TRUE);
   }
 
   return NS_OK;
 }
 
 void
