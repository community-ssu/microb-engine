Index: src/EmbedPrompter.cpp
===================================================================
--- mozilla/embedding/browser/gtk/src.orig/EmbedPrompter.cpp
+++ mozilla/embedding/browser/gtk/src/EmbedPrompter.cpp
@@ -35,16 +35,22 @@
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 #include "EmbedPrompter.h"
 #include "nsReadableUtils.h"
 
+#include <gtk/gtkversion.h>
+
+#if GTK_CHECK_VERSION(2,3,1)
+#define USE_GTK_COMBOBOX
+#endif
+
 enum {
     INCLUDE_USERNAME = 1 << 0,
     INCLUDE_PASSWORD = 1 << 1,
     INCLUDE_CHECKBOX = 1 << 2,
     INCLUDE_CANCEL   = 1 << 3
 };
 
 struct DialogDescription {
@@ -213,27 +219,36 @@
         gtk_label_set_line_wrap(GTK_LABEL(gtk_bin_get_child(GTK_BIN(mCheckBox))),
 				TRUE);
 
         gtk_box_pack_start(GTK_BOX(contentsVBox), mCheckBox, FALSE, FALSE, 0);
     }
 
     // Add a dropdown menu
     if (aType == TYPE_SELECT) {
+#ifdef USE_GTK_COMBOBOX
+    // Build up a GtkComboBox containing the items
+    mOptionMenu = gtk_combo_box_new_text ();
+
+    for (PRUint32 i = 0; i < mItemCount; ++i) {
+      gtk_combo_box_append_text(GTK_COMBO_BOX(mOptionMenu), mItemList[i].get());
+    }
+#else
         // Build up a GtkMenu containing the items
         GtkWidget* menu = gtk_menu_new();
         for (PRUint32 i = 0; i < mItemCount; ++i) {
             GtkWidget* item = gtk_menu_item_new_with_label(mItemList[i].get());
             gtk_menu_shell_append(GTK_MENU_SHELL(menu), item);
         }
 
         // Now create an OptionMenu and set this as the menu
         mOptionMenu = gtk_option_menu_new();
 
         gtk_option_menu_set_menu(GTK_OPTION_MENU(mOptionMenu), menu);
+#endif /* USE_GTK_COMBOBOX */
         gtk_box_pack_start(GTK_BOX(contentsVBox), mOptionMenu, FALSE, FALSE, 0);
     }
 
     if (aType == TYPE_UNIVERSAL) {
         // Create buttons based on the flags passed in.
         for (int i = EMBED_MAX_BUTTONS; i >= 0; --i) {
             if (!mButtonLabels[i].IsEmpty())
                 gtk_dialog_add_button(GTK_DIALOG(mWindow),
@@ -400,10 +415,14 @@
 
     if (mCheckBox)
         mCheckValue = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(mCheckBox));
 
     if (mTextField)
         mTextValue.Assign(gtk_entry_get_text(GTK_ENTRY(mTextField)));
 
     if (mOptionMenu)
+#ifdef USE_GTK_COMBOBOX
+        mSelectedItem = gtk_combo_box_get_active(GTK_COMBO_BOX(mOptionMenu));
+#else
         mSelectedItem = gtk_option_menu_get_history(GTK_OPTION_MENU(mOptionMenu));
+#endif /* USE_GTK_COMBOBOX */
 }
