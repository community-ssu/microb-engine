Index: mozilla/layout/generic/nsObjectFrame.cpp
===================================================================
--- mozilla.orig/layout/generic/nsObjectFrame.cpp
+++ mozilla/layout/generic/nsObjectFrame.cpp
@@ -3039,16 +3039,19 @@ nsresult nsPluginInstanceOwner::EnsureCa
   PRInt16 numRealAttrs = mNumCachedAttrs;
   nsAutoString data;
   if (mContent->Tag() == nsGkAtoms::object
     && !mContent->HasAttr(kNameSpaceID_None, nsGkAtoms::src)
     && mContent->GetAttr(kNameSpaceID_None, nsGkAtoms::data, data)) {
       mNumCachedAttrs++;
   }
 
+  nsAdoptingCString wmodeType = nsContentUtils::GetCharPref("plugins.force.wmode");
+  if (!wmodeType.IsEmpty())
+    mNumCachedAttrs++;
   // now lets make the arrays
   mCachedAttrParamNames  = (char **)PR_Calloc(sizeof(char *) * (mNumCachedAttrs + 1 + mNumCachedParams), 1);
   NS_ENSURE_TRUE(mCachedAttrParamNames,  NS_ERROR_OUT_OF_MEMORY);
   mCachedAttrParamValues = (char **)PR_Calloc(sizeof(char *) * (mNumCachedAttrs + 1 + mNumCachedParams), 1);
   NS_ENSURE_TRUE(mCachedAttrParamValues, NS_ERROR_OUT_OF_MEMORY);
 
   // let's fill in our attributes
   PRInt16 c = 0;
@@ -3067,16 +3070,21 @@ nsresult nsPluginInstanceOwner::EnsureCa
     end = -1;
     increment = -1;
   } else {
     // XHTML or XML.  Walk attributes in forward order.
     start = 0;
     end = numRealAttrs;
     increment = 1;
   }
+  if (!wmodeType.IsEmpty()) {
+    mCachedAttrParamNames [c] = ToNewUTF8String(NS_LITERAL_STRING("wmode"));
+    mCachedAttrParamValues[c] = ToNewUTF8String(NS_ConvertUTF8toUTF16(wmodeType));
+    c++;
+  }
   for (PRInt16 index = start; index != end; index += increment) {
     const nsAttrName* attrName = mContent->GetAttrNameAt(index);
     nsIAtom* atom = attrName->LocalName();
     nsAutoString value;
     mContent->GetAttr(attrName->NamespaceID(), atom, value);
     nsAutoString name;
     atom->ToString(name);
 
