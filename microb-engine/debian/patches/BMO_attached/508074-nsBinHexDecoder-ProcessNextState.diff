From: timeless@mozdev.org

Bug 508074 Bad free in nsBinHexDecoder::~nsBinHexDecoder
r=biesi

diff --git a/netwerk/streamconv/converters/nsBinHexDecoder.cpp b/netwerk/streamconv/converters/nsBinHexDecoder.cpp
--- a/netwerk/streamconv/converters/nsBinHexDecoder.cpp
+++ b/netwerk/streamconv/converters/nsBinHexDecoder.cpp
@@ -63,7 +63,7 @@
 
 nsBinHexDecoder::nsBinHexDecoder() :
   mState(0), mCRC(0), mFileCRC(0), mOctetin(26), 
-  mDonePos(3), mInCRC(0), mCount(0), mMarker(0), mPosInbuff(0), 
+  mDonePos(3), mInCRC(0), mNull(0), mCount(0), mMarker(0), mPosInbuff(0),
   mPosOutputBuff(0)
 {
   mDataBuffer = nsnull;
@@ -203,13 +203,13 @@ nsresult nsBinHexDecoder::ProcessNextSta
 
       // c & 63 returns the length of mName. So if we need the length, that's how
       // you can figure it out...for now we are storing it in the first byte of mName
-			*(mName) = (c & 63);     
+			*(mName) = (c & 63);
 			break;
 			
 		case BINHEX_STATE_FNAME:
 			mName[mCount] = c;
 			
-			if (mCount++ > *(mName)) // the first byte of mName is the length...
+			if (++mCount > *(mName)) // the first byte of mName is the length...
 			{			
         // okay we've figured out the file name....set the content type on the channel
         // based on the file name AND issue our delayed on start request....
diff --git a/netwerk/streamconv/converters/nsBinHexDecoder.h b/netwerk/streamconv/converters/nsBinHexDecoder.h
--- a/netwerk/streamconv/converters/nsBinHexDecoder.h
+++ b/netwerk/streamconv/converters/nsBinHexDecoder.h
@@ -134,6 +134,7 @@ protected:
   // Bin Hex Header Information
   binhex_header mHeader;
   char 	mName[64];		/* fsspec for the output file */
+  char 	mNull;
 
   // unfortunately we are going to need 2 8K buffers here. One for the data we are currently digesting. Another
   // for the outgoing decoded data. I tried getting them to share a buffer but things didn't work out so nicely.
