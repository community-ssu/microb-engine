# Bug 459780 -  X11 event compression isn't handling extension events on maemo
diff -r 8242c6adbf63 widget/src/gtk2/mozdrawingarea.c
--- a/widget/src/gtk2/mozdrawingarea.c	Wed Nov 12 10:10:55 2008 -0500
+++ b/widget/src/gtk2/mozdrawingarea.c	Thu Nov 13 01:26:12 2008 -0500
@@ -159,16 +159,19 @@ moz_drawingarea_create_windows (MozDrawi
     /* set the default pixmap to None so that you don't end up with the
        gtk default which is BlackPixel. */
     gdk_window_set_back_pixmap(drawingarea->clip_window, NULL, FALSE);
 
     attributes.event_mask = (GDK_EXPOSURE_MASK | GDK_STRUCTURE_MASK |
                              GDK_VISIBILITY_NOTIFY_MASK |
                              GDK_ENTER_NOTIFY_MASK | GDK_LEAVE_NOTIFY_MASK |
                              GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK |
+#ifdef HAVE_GTK_MOTION_HINTS
+                             GDK_POINTER_MOTION_HINT_MASK |
+#endif
                              GDK_POINTER_MOTION_MASK);
     /* create the inner window */
     drawingarea->inner_window = gdk_window_new (drawingarea->clip_window,
                                                 &attributes, attributes_mask);
     gdk_window_set_user_data(drawingarea->inner_window, widget);
 
     /* set the default pixmap to None so that you don't end up with the
        gtk default which is BlackPixel. */
diff -r 8242c6adbf63 widget/src/gtk2/mozdrawingarea.h
--- a/widget/src/gtk2/mozdrawingarea.h	Wed Nov 12 10:10:55 2008 -0500
+++ b/widget/src/gtk2/mozdrawingarea.h	Thu Nov 13 01:26:12 2008 -0500
@@ -35,28 +35,34 @@
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 #ifndef __MOZ_DRAWINGAREA_H__
 #define __MOZ_DRAWINGAREA_H__
 
 #include <gdk/gdkwindow.h>
+#include <gtk/gtkversion.h>
 #include "mozcontainer.h"
 
 #ifdef __cplusplus
 extern "C" {
 #endif /* __cplusplus */
 
 #define MOZ_DRAWINGAREA_TYPE            (moz_drawingarea_get_type())
 #define MOZ_DRAWINGAREA(obj)            (GTK_CHECK_CAST((obj), MOZ_DRAWINGAREA_TYPE, MozDrawingarea))
 #define MOZ_DRAWINGAREA_CLASS(klass)    (GTK_CHECK_CLASS_CAST((klass), MOZ_DRAWINGAREA_TYPE, MozDrawingareaClass))
 #define IS_MOZ_DRAWINGAREA(obj)         (GTK_CHECK_TYPE((obj), MOZ_DRAWINGAREA_TYPE))
 #define IS_MOZ_DRAWINGAREA_CLASS(klass) (GTK_CHECK_CLASS_TYPE((klass), MOZ_DRAWINGAREA_TYPE))
 #define MOZ_DRAWINGAREA_GET_CLASS(obj)  (GTK_CHECK_GET_CLASS((obj), MOZ_DRAWINGAREA_TYPE, MozDrawingareaClass))
+
+#if (GTK_CHECK_VERSION(2, 12, 0) || \
+    (GTK_CHECK_VERSION(2, 10, 0) && defined(MOZ_PLATFORM_HILDON)))
+#define HAVE_GTK_MOTION_HINTS
+#endif
 
 typedef struct _MozDrawingarea      MozDrawingarea;
 typedef struct _MozDrawingareaClass MozDrawingareaClass;
 
 struct _MozDrawingarea
 {
     GObject         parent_instance;
     GdkWindow      *clip_window;
diff -r 8242c6adbf63 widget/src/gtk2/nsWindow.cpp
--- a/widget/src/gtk2/nsWindow.cpp	Wed Nov 12 10:10:55 2008 -0500
+++ b/widget/src/gtk2/nsWindow.cpp	Thu Nov 13 01:26:12 2008 -0500
@@ -4493,16 +4493,19 @@ nsWindow::GrabPointer(void)
         return;
 
     gint retval;
     retval = gdk_pointer_grab(mDrawingarea->inner_window, TRUE,
                               (GdkEventMask)(GDK_BUTTON_PRESS_MASK |
                                              GDK_BUTTON_RELEASE_MASK |
                                              GDK_ENTER_NOTIFY_MASK |
                                              GDK_LEAVE_NOTIFY_MASK |
+#ifdef HAVE_GTK_MOTION_HINTS
+                                             GDK_POINTER_MOTION_HINT_MASK |
+#endif
                                              GDK_POINTER_MOTION_MASK),
                               (GdkWindow *)NULL, NULL, GDK_CURRENT_TIME);
 
     if (retval != GDK_GRAB_SUCCESS) {
         LOG(("GrabPointer: pointer grab failed\n"));
         mRetryPointerGrab = PR_TRUE;
     }
 }
@@ -5323,16 +5326,19 @@ motion_notify_event_cb(GtkWidget *widget
 motion_notify_event_cb(GtkWidget *widget, GdkEventMotion *event)
 {
     nsWindow *window = GetFirstNSWindowForGDKWindow(event->window);
     if (!window)
         return FALSE;
 
     window->OnMotionNotifyEvent(widget, event);
 
+#ifdef HAVE_GTK_MOTION_HINTS
+    gdk_event_request_motions(event);
+#endif
     return TRUE;
 }
 
 /* static */
 gboolean
 button_press_event_cb(GtkWidget *widget, GdkEventButton *event)
 {
     nsWindow *window = GetFirstNSWindowForGDKWindow(event->window);
