# BMO469023
diff -ruN mozilla/uriloader/exthandler.orig/unix/nsMIMEInfoUnix.cpp mozilla/uriloader/exthandler/unix/nsMIMEInfoUnix.cpp
--- mozilla/uriloader/exthandler.orig/unix/nsMIMEInfoUnix.cpp	2008-12-11 01:31:05.000000000 -0500
+++ mozilla/uriloader/exthandler/unix/nsMIMEInfoUnix.cpp	2008-12-11 01:45:17.000000000 -0500
@@ -119,6 +119,17 @@
 
 #ifdef MOZ_PLATFORM_HILDON
 
+/* static */ PRBool
+nsMIMEInfoUnix::HandlerExists(const char *aProtocolScheme)
+{
+  PRBool isEnabled = PR_FALSE;
+  HildonURIAction *action = hildon_uri_get_default_action(aProtocolScheme, nsnull);
+  if (action)
+    isEnabled = PR_TRUE;
+  hildon_uri_action_unref(action);
+  return isEnabled;
+}
+
 NS_IMETHODIMP
 nsMIMEInfoUnix::GetPossibleApplicationHandlers(nsIMutableArray ** aPossibleAppHandlers)
 {
diff -ruN mozilla/uriloader/exthandler.orig/unix/nsMIMEInfoUnix.h mozilla/uriloader/exthandler/unix/nsMIMEInfoUnix.h
--- mozilla/uriloader/exthandler.orig/unix/nsMIMEInfoUnix.h	2008-12-11 01:31:05.000000000 -0500
+++ mozilla/uriloader/exthandler/unix/nsMIMEInfoUnix.h	2008-12-11 01:33:57.000000000 -0500
@@ -49,6 +49,7 @@
   nsMIMEInfoUnix(const nsACString& aMIMEType) : nsMIMEInfoImpl(aMIMEType) {}
   nsMIMEInfoUnix(const nsACString& aType, HandlerClass aClass) :
     nsMIMEInfoImpl(aType, aClass) {}
+  static PRBool HandlerExists(const char *aProtocolScheme);
 
 protected:
   NS_IMETHOD GetHasDefaultHandler(PRBool *_retval);
diff -ruN mozilla/uriloader/exthandler.orig/unix/nsOSHelperAppService.cpp mozilla/uriloader/exthandler/unix/nsOSHelperAppService.cpp
--- mozilla/uriloader/exthandler.orig/unix/nsOSHelperAppService.cpp	2008-12-11 01:31:05.000000000 -0500
+++ mozilla/uriloader/exthandler/unix/nsOSHelperAppService.cpp	2008-12-11 01:33:57.000000000 -0500
@@ -1275,6 +1275,10 @@
   // Check the GConf registry for a protocol handler
   if (!*aHandlerExists)
     *aHandlerExists = nsGNOMERegistry::HandlerExists(aProtocolScheme);
+#ifdef MOZ_PLATFORM_HILDON
+  if (!*aHandlerExists)
+    *aHandlerExists = nsMIMEInfoUnix::HandlerExists(aProtocolScheme);
+#endif
 #endif
 
   return NS_OK;
