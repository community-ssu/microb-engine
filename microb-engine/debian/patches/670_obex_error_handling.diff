--- mozilla/extensions/gnomevfs/nsGnomeVFSProtocolHandler.cpp.orig	2007-09-08 12:40:05.000000000 -0400
+++ mozilla/extensions/gnomevfs/nsGnomeVFSProtocolHandler.cpp	2007-09-08 12:42:39.000000000 -0400
@@ -20,6 +20,7 @@
  *
  * Contributor(s):
  *   Darin Fisher <darin@meer.net>
+ *   Anton Rogaynis <rogainis@gmail.com>
  *
  * Alternatively, the contents of this file may be used under the terms of
  * either the GNU General Public License Version 2 or later (the "GPL"), or
@@ -65,6 +66,10 @@
 #include "prtime.h"
 #include "prprf.h"
 #include "plstr.h"
+#include "nsIPromptService.h"
+#include "nsEmbedCID.h"
+#include "nsIWindowWatcher.h"
+#include "nsIDOMWindow.h"
 
 #define MOZ_GNOMEVFS_SCHEME              "moz-gnomevfs"
 #define MOZ_GNOMEVFS_SUPPORTED_PROTOCOLS "network.gnomevfs.supported-protocols"
@@ -667,6 +672,22 @@
       *aCountRead = (PRUint32) bytesRead;
       mBytesRemaining -= *aCountRead;
     }
+    else if(mBytesRemaining) { 
+      // This message will be sent asynchronously, so 'async:' MUST! prepare it.
+      const PRUnichar message[] = {'a','s','y','n','c',':','\0'};
+      nsresult ret;
+      nsCOMPtr<nsIDOMWindow> parent = nsnull;
+
+      nsCOMPtr<nsIWindowWatcher> wwatcher = do_GetService(NS_WINDOWWATCHER_CONTRACTID, &ret);
+      NS_ENSURE_SUCCESS(ret, GNOME_VFS_ERROR_EOF);
+      
+      ret = wwatcher->GetActiveWindow(getter_AddRefs(parent));
+      NS_ENSURE_SUCCESS(ret, GNOME_VFS_ERROR_EOF);
+      nsCOMPtr<nsIPromptService> dialog = do_GetService("@mozilla.org/embedcomp/prompt-service;1", &ret);
+      NS_ENSURE_SUCCESS(ret, GNOME_VFS_ERROR_EOF);
+      dialog->Alert(parent, nsnull, message);
+      rv = GNOME_VFS_ERROR_EOF;
+    }
   }
   else if (mDirOpen)
   {
