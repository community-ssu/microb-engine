Index: widget/src/gtk2/Makefile.in
===================================================================
--- widget/src/gtk2/Makefile.in.orig
+++ widget/src/gtk2/Makefile.in
@@ -105,22 +105,27 @@
 		nsSound.cpp \
 		nsNativeKeyBindings.cpp \
 		nsScreenGtk.cpp \
 		nsScreenManagerGtk.cpp \
 		nsDeviceContextSpecG.cpp \
 		nsPrintOptionsGTK.cpp \
 		nsImageToPixbuf.cpp \
 		nsAccessibilityHelper.cpp \
-		nsPrintJobFactoryGTK.cpp \
-		nsPrintJobGTK.cpp \
 		nsTempfilePS.cpp \
 		nsIdleServiceGTK.cpp \
 		$(NULL)
 
+ifdef MOZ_ENABLE_POSTSCRIPT
+CPPSRCS        += \
+		nsPrintJobFactoryGTK.cpp \
+		nsPrintJobGTK.cpp \
+		$(NULL)
+endif
+
 # build our subdirs, too
 ifdef ACCESSIBILITY
 REQUIRES	+= accessibility
 endif
 
 SHARED_LIBRARY_LIBS = ../xpwidgets/libxpwidgets_s.a
 
 EXTRA_DSO_LDOPTS += \
Index: widget/src/gtk2/nsDeviceContextSpecG.cpp
===================================================================
--- widget/src/gtk2/nsDeviceContextSpecG.cpp.orig
+++ widget/src/gtk2/nsDeviceContextSpecG.cpp
@@ -447,17 +447,19 @@
   if (NS_FAILED(rv))
     return rv;
 
   nsCOMPtr<nsIFileOutputStream> stream = do_CreateInstance("@mozilla.org/network/file-output-stream;1");
   rv = stream->Init(file, -1, -1, 0);
   if (NS_FAILED(rv))
     return rv;
 
+#ifdef MOZ_ENABLE_POSTSCRIPT
   nsPrintJobFactoryGTK::CreatePrintJob((this), mPrintJob);
+#endif
 #ifdef USE_PDF
   gfxPDFSurface *surface = new gfxPDFSurface(stream, gfxSize(w, h));
 #else
   gfxPSSurface *surface = new gfxPSSurface(stream, gfxSize(w, h));
 #endif
 //  surface->SetDPI(600, 600);
   
   *aSurface = surface;
