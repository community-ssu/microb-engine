# Bug 386854  Bustage build fix MOZ_XUL disabled
--- mozilla/content/base/src/nsGenericElement.cpp.orig	2007-05-24 11:43:06.000000000 +0300
+++ mozilla/content/base/src/nsGenericElement.cpp	2007-05-24 12:00:06.000000000 +0300
@@ -73,21 +73,23 @@
 #include "nsDOMCSSDeclaration.h"
 #include "nsINameSpaceManager.h"
 #include "nsContentList.h"
 #include "nsDOMError.h"
 #include "nsDOMString.h"
 #include "nsIScriptSecurityManager.h"
 #include "nsIDOMMutationEvent.h"
 #include "nsMutationEvent.h"
 #include "nsNodeUtils.h"
 #include "nsDocument.h"
+#ifdef MOZ_XUL
 #include "nsXULElement.h"
+#endif
 
 #include "nsBindingManager.h"
 #include "nsXBLBinding.h"
 #include "nsIDOMCSSStyleDeclaration.h"
 #include "nsIDOMViewCSS.h"
 #include "nsIXBLService.h"
 #include "nsPIDOMWindow.h"
 #include "nsIBoxObject.h"
 #include "nsPIBoxObject.h"
 #include "nsIDOMNSDocument.h"
@@ -1765,26 +1767,29 @@ nsGenericElement::BindToTree(nsIDocument
   // anything here
   NS_PRECONDITION(IsNodeOfType(eXUL) ||
                   aBindingParent != this || IsNativeAnonymous(),
                   "Only native anonymous content should have itself as its "
                   "own binding parent");
   
   if (!aBindingParent && aParent) {
     aBindingParent = aParent->GetBindingParent();
   }
 
+#ifdef MOZ_XUL
   // First set the binding parent
   nsXULElement* xulElem = nsXULElement::FromContent(this);
   if (xulElem) {
     xulElem->SetXULBindingParent(aBindingParent);
   }
-  else {
+  else 
+#endif
+  {
     if (aBindingParent) {
       nsDOMSlots *slots = GetDOMSlots();
 
       if (!slots) {
         return NS_ERROR_OUT_OF_MEMORY;
       }
 
       slots->mBindingParent = aBindingParent; // Weak, so no addref happens.
     }
   }
@@ -1907,25 +1912,28 @@ nsGenericElement::UnbindFromTree(PRBool 
 
     document->ClearBoxObjectFor(this);
   }
 
   // Unset things in the reverse order from how we set them in BindToTree
   mParentPtrBits = aNullParent ? 0 : mParentPtrBits & ~PARENT_BIT_INDOCUMENT;
 
   // Unset this since that's what the old code effectively did.
   UnsetFlags(NODE_FORCE_XBL_BINDINGS);
   
+#ifdef MOZ_XUL
   nsXULElement* xulElem = nsXULElement::FromContent(this);
   if (xulElem) {
     xulElem->SetXULBindingParent(nsnull);
   }
-  else {
+  else
+#endif
+  {
     nsDOMSlots *slots = GetExistingDOMSlots();
     if (slots) {
       slots->mBindingParent = nsnull;
     }
   }
 
   if (aDeep) {
     // Do the kids. Don't call GetChildCount() here since that'll force
     // XUL to generate template children, which there is no need for since
     // all we're going to do is unbind them anyway.
