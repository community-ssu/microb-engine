--- mozilla/docshell/shistory/src/nsSHistory.cpp.orig	2008-04-07 16:10:10.000000000 +0300
+++ mozilla/docshell/shistory/src/nsSHistory.cpp	2008-04-07 17:01:40.000000000 +0300
@@ -65,19 +65,20 @@
 #include "nspr.h"
 #include <math.h>  // for log()
 
 #define PREF_SHISTORY_SIZE "browser.sessionhistory.max_entries"
 #define PREF_SHISTORY_MAX_TOTAL_VIEWERS "browser.sessionhistory.max_total_viewers"
+#define PREF_SHISTORY_MAX_VIEWERS "browser.sessionhistory.max_viewers"
 
 static PRInt32  gHistoryMaxSize = 50;
 // Max viewers allowed per SHistory objects
-static const PRInt32  gHistoryMaxViewers = 3;
+static PRInt32  gHistoryMaxViewers = 1;
 // List of all SHistory objects, used for content viewer cache eviction
 static PRCList gSHistoryList;
 // Max viewers allowed total, across all SHistory objects - negative default
 // means we will calculate how many viewers to cache based on total memory
-PRInt32 nsSHistory::sHistoryMaxTotalViewers = -1;
+PRInt32 nsSHistory::sHistoryMaxTotalViewers = 0;
 
 enum HistCmd{
   HIST_CMD_BACK,
   HIST_CMD_FORWARD,
   HIST_CMD_GOTOINDEX,
@@ -234,10 +235,12 @@ nsSHistory::Startup()
     // but keep the per SHistory cached viewer limit constant
     nsCOMPtr<nsIPrefBranch2> branch = do_QueryInterface(prefs);
     if (branch) {
       branch->GetIntPref(PREF_SHISTORY_MAX_TOTAL_VIEWERS,
                          &sHistoryMaxTotalViewers);
+      branch->GetIntPref(PREF_SHISTORY_MAX_VIEWERS,
+                         &gHistoryMaxViewers);
       nsSHistoryObserver* obs = new nsSHistoryObserver();
       if (!obs) {
         return NS_ERROR_OUT_OF_MEMORY;
       }
       branch->AddObserver(PREF_SHISTORY_MAX_TOTAL_VIEWERS,
