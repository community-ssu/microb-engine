# Some random crashes fixes (workarounds) after memory corruptions 
Index: mozilla/xpcom/string/src/nsTStringObsolete.cpp
===================================================================
--- mozilla.orig/xpcom/string/src/nsTStringObsolete.cpp
+++ mozilla/xpcom/string/src/nsTStringObsolete.cpp
@@ -437,16 +437,18 @@
 
   /**
    * nsTString::CompressWhitespace
    */
 
 void
 nsTString_CharT::CompressWhitespace( PRBool aTrimLeading, PRBool aTrimTrailing )
   {
+    if (!mLength || !mData)
+      return;
     const char* set = kWhitespace;
 
     ReplaceChar(set, ' ');
     Trim(set, aTrimLeading, aTrimTrailing);
 
       // this one does some questionable fu... just copying the old code!
     mLength = nsBufferRoutines<char_type>::compress_chars(mData, mLength, set);
   }
Index: mozilla/content/html/document/src/nsHTMLContentSink.cpp
===================================================================
--- mozilla.orig/content/html/document/src/nsHTMLContentSink.cpp
+++ mozilla/content/html/document/src/nsHTMLContentSink.cpp
@@ -2455,16 +2455,18 @@
 
   if (!mDocument->GetDocumentTitle().IsVoid()) {
     MOZ_TIMER_DEBUGLOG(("Stop: nsHTMLContentSink::UpdateDocumentTitle()\n"));
     MOZ_TIMER_STOP(mWatch);
     return NS_OK;
   }
 
   // Use mTitleString.
+  if (mTitleString.IsEmpty())
+    return NS_OK;
   mTitleString.CompressWhitespace(PR_TRUE, PR_TRUE);
 
   nsCOMPtr<nsIDOMNSDocument> domDoc(do_QueryInterface(mDocument));
   domDoc->SetTitle(mTitleString);
 
   mTitleString.Truncate();
 
   MOZ_TIMER_DEBUGLOG(("Stop: nsHTMLContentSink::UpdateDocumentTitle()\n"));
Index: mozilla/docshell/base/nsDocShell.cpp
===================================================================
--- mozilla.orig/docshell/base/nsDocShell.cpp
+++ mozilla/docshell/base/nsDocShell.cpp
@@ -3840,32 +3840,34 @@
     *aTitle = ToNewUnicode(mTitle);
     return NS_OK;
 }
 
 NS_IMETHODIMP
 nsDocShell::SetTitle(const PRUnichar * aTitle)
 {
     // Store local title
+	if (!aTitle)
+        mTitle.Truncate();
     mTitle = aTitle;
 
     nsCOMPtr<nsIDocShellTreeItem> parent;
     GetSameTypeParent(getter_AddRefs(parent));
 
     // When title is set on the top object it should then be passed to the 
     // tree owner.
     if (!parent) {
         nsCOMPtr<nsIBaseWindow>
             treeOwnerAsWin(do_QueryInterface(mTreeOwner));
         if (treeOwnerAsWin)
             treeOwnerAsWin->SetTitle(aTitle);
     }
 
     if (mGlobalHistory && mCurrentURI && mLoadType != LOAD_ERROR_PAGE) {
-        mGlobalHistory->SetPageTitle(mCurrentURI, nsDependentString(aTitle));
+        mGlobalHistory->SetPageTitle(mCurrentURI, mTitle);
     }
 
 
     // Update SessionHistory with the document's title. If the
     // page was loaded from history or the page bypassed history,
     // there is no need to update the title. There is no need to
     // go to mSessionHistory to update the title. Setting it in mOSHE 
     // would suffice. 
