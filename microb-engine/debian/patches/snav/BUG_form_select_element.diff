# 71068 Select element looses focus while spatial navigation
Index: mozilla/extensions/spatialnavigation/src/nsSpatialNavigation.cpp
===================================================================
--- mozilla.orig/extensions/spatialnavigation/src/nsSpatialNavigation.cpp
+++ mozilla/extensions/spatialnavigation/src/nsSpatialNavigation.cpp
@@ -55,16 +55,17 @@
 nsSpatialNavigation::nsSpatialNavigation(nsSpatialNavigationService* aService)
 {
   NS_ASSERTION(aService, "Should not create this object without a valid service");
 
   mService = aService; // back pointer -- no reference
 
   mNavigationFramesState = PR_FALSE;
   mKeyPressedState = 0;
+  mKeyWasDown = PR_FALSE;
 }
 
 #ifdef DEBUG_romaxa
 nsresult debug_content(nsISupports *content)
 {
   nsresult rv;
   nsCOMPtr<nsIDOMNode> node;
   node = do_QueryInterface(content, &rv);
@@ -119,16 +120,17 @@
 nsSpatialNavigation::Right()
 {
   return handleMove(eNavRight);
 }
 
 NS_IMETHODIMP
 nsSpatialNavigation::KeyDown(nsIDOMEvent* aEvent)
 {
+  mKeyWasDown = PR_TRUE;
   mKeyPressedCount = 0;
   if (!mService->mEnabled)
     return NS_OK;
 
 /*if (!mKeyPressedState) {
     aEvent->StopPropagation();
     aEvent->PreventDefault();
   }*/
@@ -142,29 +144,34 @@
     return NS_OK;
   mKeyPressedCount++;
   return NS_OK;
 }
 
 NS_IMETHODIMP
 nsSpatialNavigation::KeyUp(nsIDOMEvent* aEvent)
 {
-  if (!mService->mEnabled)
+  if (!mService->mEnabled) {
+    mKeyWasDown = PR_FALSE;
     return NS_OK;
+  }
 
   if (mKeyPressedCount > 1) {
     if (mKeyPressedState == 0) {
       mKeyPressedState = 1;
     }
     
     mKeyPressedCount = 0;
+    mKeyWasDown = PR_FALSE;
     return NS_OK;
   }
   mKeyPressedCount = 0;
-  return HandleKey(aEvent, PR_TRUE);
+  nsresult rv = HandleKey(aEvent, PR_TRUE);
+  mKeyWasDown = PR_FALSE;
+  return rv;
 }
 
 NS_IMETHODIMP
 nsSpatialNavigation::HandleEvent(nsIDOMEvent* aEvent)
 {
   return NS_OK;
 }
 
@@ -224,16 +231,18 @@
         if (formControlType == NS_FORM_TEXTAREA ||
             formControlType == NS_FORM_INPUT_TEXT ||
             formControlType == NS_FORM_INPUT_PASSWORD ||
             formControlType == NS_FORM_INPUT_FILE) 
         {
           return NS_OK;
         }
       }
+      if (formControlType == NS_FORM_SELECT && !mKeyWasDown && aReal)
+        return NS_OK;
   }
   else if (mService->mIgnoreTextFields && targetContent->IsNodeOfType(nsINode::eHTML)) 
   {
     // Test for isindex, a deprecated kind of text field. We're using a string 
     // compare because <isindex> is not considered a form control, so it does 
     // not support nsIFormControl or eHTML_FORM_CONTROL, and it's not worth 
     // having a table of atoms just for it. 
     
Index: mozilla/extensions/spatialnavigation/src/nsSpatialNavigationPrivate.h
===================================================================
--- mozilla.orig/extensions/spatialnavigation/src/nsSpatialNavigationPrivate.h
+++ mozilla/extensions/spatialnavigation/src/nsSpatialNavigationPrivate.h
@@ -162,16 +162,17 @@
 
   nsCOMPtr<nsIDOMWindow> mTopWindow;
 
   nsSpatialNavigationService* mService;
 
   PRBool mNavigationFramesState;
   PRUint32 mKeyPressedCount;
   PRUint16 mKeyPressedState;
+  PRBool mKeyWasDown;
 };
 
 
 
 class nsSpatialNavigationService: public nsIObserver 
 {
 public:  
   nsSpatialNavigationService();  
