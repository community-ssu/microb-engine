diff --git a/modules/plugin/base/src/Makefile.in b/modules/plugin/base/src/Makefile.in
index bbc5b59..87bcef0 100644
--- a/modules/plugin/base/src/Makefile.in
+++ b/modules/plugin/base/src/Makefile.in
@@ -84,27 +84,27 @@ REQUIRES	+= gtkxtbin
 endif
 
 CPPSRCS		= \
 		ns4xPlugin.cpp \
 		ns4xPluginInstance.cpp \
 		nsPluginHostImpl.cpp \
 		nsPluginModule.cpp \
 		nsPluginInstancePeer.cpp \
-		nsPluginDirServiceProvider.cpp \
 		nsJSNPRuntime.cpp \
 		$(NULL)
 
 ifeq ($(OS_ARCH), BeOS)
 	CPPSRCS += nsPluginsDirBeOS.cpp
 	CPPSRCS += nsPluginNativeWindow.cpp
 else
 ifneq (,$(filter WINNT WINCE,$(OS_ARCH)))
 	CPPSRCS += nsPluginsDirWin.cpp
 	CPPSRCS += nsPluginNativeWindowWin.cpp
+	CPPSRCS += nsPluginDirServiceProvider.cpp
 else
 ifeq ($(MOZ_WIDGET_TOOLKIT),os2)
 	CPPSRCS += nsPluginsDirOS2.cpp
 	CPPSRCS += nsPluginNativeWindowOS2.cpp
 else
 ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
 	CPPSRCS += nsPluginsDirDarwin.cpp
 	CPPSRCS += nsPluginNativeWindow.cpp
diff --git a/modules/plugin/base/src/nsPluginDirServiceProvider.cpp b/modules/plugin/base/src/nsPluginDirServiceProvider.cpp
index 05c703d..9cfec0a 100644
--- a/modules/plugin/base/src/nsPluginDirServiceProvider.cpp
+++ b/modules/plugin/base/src/nsPluginDirServiceProvider.cpp
@@ -43,18 +43,16 @@ #include "nsCRT.h"
 #include "nsILocalFile.h"
 #include "nsIPrefBranch.h"
 #include "nsIPrefService.h"
 #include "nsDependentString.h"
 #include "nsXPIDLString.h"
 #include "prmem.h"
 #include "nsArrayEnumerator.h"
 
-#if defined (XP_WIN)
-
 typedef struct structVer
 {
   WORD wMajor;
   WORD wMinor;
   WORD wRelease;
   WORD wBuild;
 } verBlock;
 
@@ -188,17 +186,16 @@ CompareVersion(verBlock vbVersionOld, ve
     return 1;
   } else if (vbVersionOld.wBuild < vbVersionNew.wBuild) {
     return -1;
   }
 
   /* the versions are all the same */
   return 0;
 }
-#endif
 
 //*****************************************************************************
 // nsPluginDirServiceProvider::Constructor/Destructor
 //*****************************************************************************
 
 nsPluginDirServiceProvider::nsPluginDirServiceProvider()
 {
 }
@@ -224,17 +221,16 @@ nsPluginDirServiceProvider::GetFile(cons
 {
   nsCOMPtr<nsILocalFile>  localFile;
   nsresult rv = NS_ERROR_FAILURE;
 
   NS_ENSURE_ARG(prop);
   *_retval = nsnull;
   *persistant = PR_TRUE;
 
-#if defined(XP_WIN)
   nsCOMPtr<nsIPrefBranch> prefs(do_GetService(NS_PREFSERVICE_CONTRACTID));
   if (!prefs) {
     return rv;
   }
 
   if (nsCRT::strcmp(prop, NS_WIN_4DOTX_SCAN_KEY) == 0) {
     // Check our prefs to see if scanning the 4.x folder has been
     // explictly overriden failure to get the pref is okay, we'll do
@@ -539,25 +535,23 @@ #endif /* OJI */
 
     if (newestPath[0] != 0) {
       PL_strcat(newestPath,"\\browser");
       rv = NS_NewNativeLocalFile(nsDependentCString(newestPath), PR_TRUE,
                                  getter_AddRefs(localFile));
     }
 
   }
-#endif
 
   if (localFile && NS_SUCCEEDED(rv))
     return CallQueryInterface(localFile, _retval);
 
   return rv;
 }
 
-#ifdef XP_WIN
 nsresult
 nsPluginDirServiceProvider::GetPLIDDirectories(nsISimpleEnumerator **aEnumerator)
 {
   NS_ENSURE_ARG_POINTER(aEnumerator);
   *aEnumerator = nsnull;
 
   nsCOMArray<nsILocalFile> dirs;
 
@@ -630,10 +624,8 @@ nsPluginDirServiceProvider::GetPLIDDirec
       }
       ::RegCloseKey(keyloc);
     }
   }
   ::RegCloseKey(baseloc);
   return NS_OK;
 }
 
-#endif
-
diff --git a/modules/plugin/base/src/nsPluginHostImpl.cpp b/modules/plugin/base/src/nsPluginHostImpl.cpp
index c51883b..74be19b 100644
--- a/modules/plugin/base/src/nsPluginHostImpl.cpp
+++ b/modules/plugin/base/src/nsPluginHostImpl.cpp
@@ -3306,24 +3306,26 @@ NS_IMETHODIMP nsPluginHostImpl::Destroy(
 
   // Lets remove any of the temporary files that we created.
   if (sPluginTempDir) {
     sPluginTempDir->Remove(PR_TRUE);
 
     NS_RELEASE(sPluginTempDir);
   }
 
+#ifdef XP_WIN
   if (mPrivateDirServiceProvider)
   {
     nsCOMPtr<nsIDirectoryService> dirService =
       do_GetService(kDirectoryServiceContractID);
     if (dirService)
       dirService->UnregisterProvider(mPrivateDirServiceProvider);
     mPrivateDirServiceProvider = nsnull;
   }
+#endif /* XP_WIN */
 
   nsCOMPtr<nsIPrefBranch2> prefBranch(do_QueryInterface(mPrefService));
   if (prefBranch) {
     prefBranch->RemoveObserver("security.enable_java", this);
   }
   mPrefService = nsnull; // release prefs service to avoid leaks!
 
   return NS_OK;
@@ -5292,19 +5294,21 @@ #endif
   // Read cached plugins info
   ReadPluginInfo();
 
   nsCOMPtr<nsIComponentManager> compManager;
   NS_GetComponentManager(getter_AddRefs(compManager));
   if (compManager)
     LoadXPCOMPlugins(compManager);
 
+#ifdef XP_WIN
   // Failure here is not a show-stopper so just warn.
   rv = EnsurePrivateDirServiceProvider();
   NS_ASSERTION(NS_SUCCEEDED(rv), "Failed to register dir service provider.");
+#endif /* XP_WIN */
 
   nsCOMPtr<nsIProperties> dirService(do_GetService(kDirectoryServiceContractID, &rv));
   if (NS_FAILED(rv))
     return rv;
 
   nsCOMPtr<nsISimpleEnumerator> dirList;
 
   // Scan plugins directories;
@@ -5326,18 +5330,17 @@ #endif
       mCachedPlugins = nsnull;
       return NS_OK;
     }
   }
 
   mPluginsLoaded = PR_TRUE; // at this point 'some' plugins have been loaded,
                             // the rest is optional
 
-#if defined (XP_WIN)
-
+#ifdef XP_WIN
   PRBool bScanPLIDs = PR_FALSE;
 
   if (mPrefService)
     mPrefService->GetBoolPref("plugin.scan.plid.all", &bScanPLIDs);
 
     // Now lets scan any PLID directories
   if (bScanPLIDs && mPrivateDirServiceProvider) {
     rv = mPrivateDirServiceProvider->GetPLIDDirectories(getter_AddRefs(dirList));
@@ -5398,17 +5401,16 @@ #if defined (XP_WIN)
       // if we are just looking for possible changes,
       // no need to proceed if changes are detected
       if (!aCreatePluginList && *aPluginsChanged) {
         mCachedPlugins = nsnull;
         return NS_OK;
       }
     }
   }
-
 #endif
 
   // if get to this point and did not detect changes in plugins
   // that means no plugins got updated or added
   // let's see if plugins have been removed
   if (!*aPluginsChanged) {
     // count plugins remained in cache, if there are some, that means some plugins were removed;
     // while counting, we should ignore unwanted plugins which are also present in cache
@@ -5827,16 +5829,17 @@ nsPluginHostImpl::RemoveCachedPluginsInf
       NS_ADDREF(*result);
       break;
     }
     prev = tag;
     tag = tag->mNext;
   }
 }
 
+#ifdef XP_WIN
 nsresult
 nsPluginHostImpl::EnsurePrivateDirServiceProvider()
 {
   if (!mPrivateDirServiceProvider)
   {
     nsresult rv;
     mPrivateDirServiceProvider = new nsPluginDirServiceProvider();
     if (!mPrivateDirServiceProvider)
@@ -5845,16 +5848,17 @@ nsPluginHostImpl::EnsurePrivateDirServic
     if (NS_FAILED(rv))
       return rv;
     rv = dirService->RegisterProvider(mPrivateDirServiceProvider);
     if (NS_FAILED(rv))
       return rv;
   }
   return NS_OK;
 }
+#endif /* XP_WIN */
 
 ////////////////////////////////////////////////////////////////////////
 /* Called by GetURL and PostURL */
 NS_IMETHODIMP nsPluginHostImpl::NewPluginURLStream(const nsString& aURL,
                                                    nsIPluginInstance *aInstance,
                                                    nsIPluginStreamListener* aListener,
                                                    const char *aPostData,
                                                    PRBool aIsFile,
diff --git a/modules/plugin/base/src/nsPluginHostImpl.h b/modules/plugin/base/src/nsPluginHostImpl.h
index 5ef2c11..290cef5 100644
--- a/modules/plugin/base/src/nsPluginHostImpl.h
+++ b/modules/plugin/base/src/nsPluginHostImpl.h
@@ -443,17 +443,19 @@ private:
   // Whether java is enabled
   PRPackedBool mJavaEnabled;
 
   nsActivePluginList mActivePluginList;
   nsVoidArray mUnusedLibraries;
 
   nsCOMPtr<nsIFile>                    mPluginRegFile;
   nsCOMPtr<nsIPrefBranch>              mPrefService;
+#ifdef XP_WIN
   nsRefPtr<nsPluginDirServiceProvider> mPrivateDirServiceProvider;
+#endif /* XP_WIN */
 
   nsWeakPtr mCurrentDocument; // weak reference, we use it to id document only
 
   static nsIFile *sPluginTempDir;
 
   // We need to hold a global ptr to ourselves because we register for
   // two different CIDs for some reason...
   static nsPluginHostImpl* sInst;
