--- mozilla/security/manager/ssl/src/nsNSSComponent.cpp.orig	2007-04-25 17:01:18.000000000 +0300
+++ mozilla/security/manager/ssl/src/nsNSSComponent.cpp	2007-04-25 17:02:46.228513750 +0300
@@ -715,35 +715,42 @@ nsNSSComponent::InstallLoadableRoots()
       //   library/DLL search path
   };
 
   for (size_t il = 0; il < sizeof(possible_ckbi_locations)/sizeof(const char*); ++il) {
     nsCOMPtr<nsILocalFile> mozFile;
     char *fullLibraryPath = nsnull;
 
     if (!possible_ckbi_locations[il])
     {
       fullLibraryPath = PR_GetLibraryName(nsnull, "nssckbi");
+      mozFile = do_CreateInstance(NS_LOCAL_FILE_CONTRACTID);
+      if (!mozFile)
+        continue;
     }
     else
     {
       directoryService->Get( possible_ckbi_locations[il],
                              NS_GET_IID(nsILocalFile), 
                              getter_AddRefs(mozFile));
   
       if (!mozFile) {
         continue;
       }
 
       nsCAutoString processDir;
       mozFile->GetNativePath(processDir);
       fullLibraryPath = PR_GetLibraryName(processDir.get(), "nssckbi");
     }
+    mozFile->InitWithNativePath(nsDependentCString(fullLibraryPath));
+    PRBool exists = PR_FALSE;
+    if (NS_FAILED(mozFile->Exists(&exists)) || !exists)
+      continue;
 
     if (!fullLibraryPath) {
       continue;
     }
 
     char *escaped_fullLibraryPath = nss_addEscape(fullLibraryPath, '\"');
     if (!escaped_fullLibraryPath) {
       PR_FreeLibraryName(fullLibraryPath); // allocated by NSPR
       continue;
     }
