--- mozilla/widget/src/gtk2/nsWindow.h.orig	2008-04-06 18:32:40.000000000 +0300
+++ mozilla/widget/src/gtk2/nsWindow.h	2008-04-08 14:11:10.000000000 +0300
@@ -408,10 +408,11 @@ private:
     // Transparency
     PRBool       mIsTranslucent;
     // This bitmap tracks which pixels are transparent. We don't support
     // full translucency at this time; each pixel is either fully opaque
     // or fully transparent.
+    PRBool       mIsContentExists;
     gchar*       mTransparencyBitmap;
  
     PRBool       mMozEmbedTransparencyContextChecked;
     PRBool       mMozEmbedTransparencyContext;
 
--- mozilla/widget/src/gtk2/nsWindow.cpp.orig	2008-04-08 14:05:15.000000000 +0300
+++ mozilla/widget/src/gtk2/nsWindow.cpp	2008-04-08 14:10:44.000000000 +0300
@@ -326,10 +326,11 @@ nsWindow::nsWindow()
     mWindowType          = eWindowType_child;
     mSizeState           = nsSizeMode_Normal;
     mOldFocusWindow      = 0;
     mPluginType          = PluginType_NONE;
     mThemeTimeoutSource  = 0;
+    mIsContentExists     = PR_FALSE;
 
     if (!gGlobalsInitialized) {
         gGlobalsInitialized = PR_TRUE;
 
         // It's OK if either of these fail, but it may not be one day.
@@ -1623,10 +1624,37 @@ gdk_window_flash(GdkWindow *    aGdkWind
 
   gdk_region_offset(aRegion, -x, -y);
 }
 #endif // DEBUG
 
+static void
+gdk_window_paint(GdkWindow *    aGdkWindow,
+                 GdkRegion *    aRegion)
+{
+  gint         width;
+  gint         height;
+  GdkGC *      gc = 0;
+  GdkColor     white;
+  gdk_window_get_geometry(aGdkWindow,
+                          NULL,
+                          NULL,
+                          &width,
+                          &height,
+                          NULL);
+  gc = gdk_gc_new(GDK_DRAWABLE(aGdkWindow));
+  white.pixel = WhitePixel(gdk_display,DefaultScreen(gdk_display));
+  gdk_gc_set_foreground(gc,&white);
+  gdk_draw_rectangle(GDK_DRAWABLE(aGdkWindow),
+                     gc,
+                     TRUE,
+                     0,
+                     0,
+                     width,
+                     height);
+  gdk_gc_destroy(gc);
+}
+
 gboolean
 nsWindow::OnExposeEvent(GtkWidget *aWidget, GdkEventExpose *aEvent)
 {
     if (mIsDestroyed) {
         LOG(("Expose event on destroyed window [%p] window %p\n",
@@ -1751,11 +1779,14 @@ nsWindow::OnExposeEvent(GtkWidget *aWidg
     event.rect = nsnull;
     event.region = updateRegion;
     event.renderingContext = rc;
 
     nsEventStatus status;
+    mIsContentExists = PR_FALSE;
     DispatchEvent(&event, status);
+    if (!mIsContentExists)
+        gdk_window_paint(aEvent->window, aEvent->region);
 
     // DispatchEvent can Destroy us (bug 378273), avoid doing any paint
     // operations below if that happened - it will lead to XError and exit().
     if (NS_LIKELY(!mIsDestroyed)) {
 
@@ -3416,10 +3447,11 @@ nsWindow::SetWindowTranslucency(PRBool a
 }
 
 NS_IMETHODIMP
 nsWindow::GetWindowTranslucency(PRBool& aTranslucent)
 {
+    mIsContentExists = PR_TRUE;
     DoMozEmbedTransparencyContextCheck();
 
     if (!mMozEmbedTransparencyContext) {
         if (!mShell) {
             // Pass the request to the toplevel window
