Index: mozilla/extensions/pref/system-pref/src/nsSystemPref.cpp
===================================================================
--- mozilla.orig/extensions/pref/system-pref/src/nsSystemPref.cpp
+++ mozilla/extensions/pref/system-pref/src/nsSystemPref.cpp
@@ -282,31 +282,40 @@ nsSystemPref::ReadSystemPref(const char 
 
     nsCOMPtr<nsIPrefBranch> prefBranch
         (do_GetService(NS_PREFSERVICE_CONTRACTID, &rv));
     if (NS_FAILED(rv))
         return rv;
 
     SYSPREF_LOG(("about to read aPrefName %s\n", aPrefName));
 
-    prefBranch->UnlockPref(aPrefName);
+    prefBranch->LockPref(aPrefName);
 
     PRInt32 prefType = nsIPrefBranch::PREF_INVALID;
     nsXPIDLCString strValue;
     PRInt32 intValue = 0;
     PRBool boolValue = PR_FALSE;
 
     rv = prefBranch->GetPrefType(aPrefName, &prefType);
     if (NS_FAILED(rv))
         return rv;
     switch (prefType) {
     case nsIPrefBranch::PREF_STRING:
         mSysPrefService->GetCharPref(aPrefName, getter_Copies(strValue));
         SYSPREF_LOG(("system value is %s\n", strValue.get()));
 
+        if (!nsCString(aPrefName).Equals("network.proxy.autoconfig_url")) {
+            if (StringBeginsWith(strValue, NS_LITERAL_CSTRING("http://")))
+                strValue.Cut(0, 7);
+            else if (StringBeginsWith(strValue, NS_LITERAL_CSTRING("https://")))
+                strValue.Cut(0, 8);
+            else if (StringBeginsWith(strValue, NS_LITERAL_CSTRING("ftp://")))
+                strValue.Cut(0, 6);
+        }
+
         prefBranch->SetCharPref(aPrefName, strValue.get());
         break;
     case nsIPrefBranch::PREF_INT:
         mSysPrefService->GetIntPref(aPrefName, &intValue);
         SYSPREF_LOG(("system value is %d\n", intValue));
 
         prefBranch->SetIntPref(aPrefName, intValue);
         break;
@@ -315,17 +324,17 @@ nsSystemPref::ReadSystemPref(const char 
         SYSPREF_LOG(("system value is %s\n", boolValue ? "TRUE" : "FALSE"));
 
         prefBranch->SetBoolPref(aPrefName, boolValue);
         break;
     default:
         SYSPREF_LOG(("Fail to system value for it\n"));
         return NS_ERROR_FAILURE;
     }
-    prefBranch->LockPref(aPrefName);
+    prefBranch->UnlockPref(aPrefName);
     return NS_OK;
 }
 
 //////////////////////////////////////////////////////////////////////
 // nsSystemPref::UseMozillaPrefs
 // Restore mozilla default prefs, remove system pref listeners
 /////////////////////////////////////////////////////////////////////
 nsresult
