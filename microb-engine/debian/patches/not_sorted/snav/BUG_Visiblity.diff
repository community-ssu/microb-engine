# Workaround
# Some times spatial navigation cant see some elements
# Probably coordinates calculation bug, may be somethin else wrong in viewManager->GetRectVisibility
# usage
diff -ruN -p -U10 mozilla/extensions/spatialnavigation/src/nsSpatialNavigationPrivate.h mozilla/extensions/spatialnavigation/src/nsSpatialNavigationPrivate.h
--- mozilla/extensions/spatialnavigation/src/nsSpatialNavigationPrivate.h	2007-07-15 14:07:18.000000000 +0300
+++ mozilla/extensions/spatialnavigation/src/nsSpatialNavigationPrivate.h	2007-07-15 14:17:01.000000000 +0300
@@ -215,21 +215,21 @@ nsresult getFrameForContent           (n
 PRBool   isContentOfType              (nsIContent* content, const char* type);
 PRBool   isArea                       (nsIContent* content);
 PRBool   isMap                        (nsIFrame* frame);
 PRBool   isTargetable                 (PRBool focusDocuments, nsIFrame* frame);
 nsRect   makeRectRelativeToGlobalView (nsIFrame *aFrame);
 void     poly2Rect                    (int sides, nscoord* coord, nsRect* rect);
 void     getRectOfAreaElement         (nsIFrame* f, nsIDOMHTMLAreaElement* e, nsRect* r);
 PRBool   isRectInDirection            (int direction, nsRect& focusedRect, nsRect& frameRect);
 PRInt64  spatialDistance              (int direction, nsRect& a, nsRect& b);
 void     GetWindowFromDocument        (nsIDOMDocument* aDocument, nsIDOMWindowInternal** aWindow);
-PRBool   IsPartiallyVisible           (nsIPresShell* shell, nsIFrame* frame);
+PRBool   IsPartiallyVisible           (nsIPresShell* shell, nsIFrame* frame, PRBool aForce = PR_TRUE);
 void     ScrollWindow                 (int direction, nsIDOMWindow* window);
 
 
 
 class DisableJSScope
 {
 public:
   DisableJSScope(nsIDOMWindow* window) :
     isEnabled(PR_FALSE), scriptContext(nsnull)
   {
diff -ruN -p -U10 mozilla/extensions/spatialnavigation/src/nsSpatialNavigationUtils.cpp mozilla/extensions/spatialnavigation/src/nsSpatialNavigationUtils.cpp
--- mozilla/extensions/spatialnavigation/src/nsSpatialNavigationUtils.cpp	2007-07-15 14:07:19.000000000 +0300
+++ mozilla/extensions/spatialnavigation/src/nsSpatialNavigationUtils.cpp	2007-07-15 14:16:42.000000000 +0300
@@ -757,21 +757,21 @@ void GetWindowFromDocument(nsIDOMDocumen
   nsCOMPtr<nsIDOMAbstractView> view;
   docview->GetDefaultView(getter_AddRefs(view));
   if (!view) return;
   
   nsCOMPtr<nsIDOMWindowInternal> window = do_QueryInterface(view);
   NS_IF_ADDREF(*aWindow = window);
 }
 
 
 
-PRBool IsPartiallyVisible(nsIPresShell* shell, nsIFrame* frame) 
+PRBool IsPartiallyVisible(nsIPresShell* shell, nsIFrame* frame, PRBool aForce)
 {
    // We need to know if at least a kMinPixels around the object is visible
    // Otherwise it will be marked STATE_OFFSCREEN and STATE_INVISIBLE
    
    const PRUint16 kMinPixels  = 12;
     // Set up the variables we need, return false if we can't get at them all
  
    nsIViewManager* viewManager = shell->GetViewManager();
    if (!viewManager)
      return PR_FALSE;
@@ -801,22 +801,29 @@ PRBool IsPartiallyVisible(nsIPresShell* 
      relFrameRect.x = frameOffset.x;
      relFrameRect.y = frameOffset.y;
    }
  
    PRUint16 minPixels = PRUint16(nsPresContext::CSSPixelsToAppUnits(kMinPixels));
    nsRectVisibility rectVisibility;
    viewManager->GetRectVisibility(containingView, relFrameRect, 
                                   minPixels, 
                                   &rectVisibility);
  
-   if (rectVisibility == nsRectVisibility_kVisible ||
-       (rectVisibility == nsRectVisibility_kZeroAreaRect && frame->GetNextInFlow())) {
+   if (rectVisibility == nsRectVisibility_kVisible
+      ||(aForce &&
+      (
+        rectVisibility == nsRectVisibility_kAboveViewport
+        || rectVisibility == nsRectVisibility_kBelowViewport
+        || rectVisibility == nsRectVisibility_kLeftOfViewport
+        || rectVisibility == nsRectVisibility_kRightOfViewport
+      )) ||
+      (rectVisibility == nsRectVisibility_kZeroAreaRect && frame->GetNextInFlow())) {
      // This view says it is visible, but we need to check the parent view chain :(
      // Note: zero area rects can occur in the first frame of a multi-frame text flow,
      //       in which case the next frame exists because the text flow is visible
      while ((containingView = containingView->GetParent()) != nsnull) {
        if (containingView->GetVisibility() == nsViewVisibility_kHide) {
          return PR_FALSE;
        }
      }
      return PR_TRUE;
    }
