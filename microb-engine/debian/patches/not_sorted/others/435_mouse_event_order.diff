# Fix order of mouse events, which were broken before by JSBreakExperimental patch.
# contact: Anton Rogaynis
--- mozilla/widget/src/gtk2/nsWindow.cpp.orig	2007-08-21 12:09:56.000000000 -0400
+++ mozilla/widget/src/gtk2/nsWindow.cpp	2007-08-21 14:10:01.000000000 -0400
@@ -244,6 +244,10 @@
 static PRBool            gRaiseWindows         = PR_TRUE;
 static nsWindow         *gPluginFocusWindow    = NULL;
 
+// to handle event order
+static PRBool            gWaitingForButtonUp   = PR_FALSE;
+static GSList           *gEventList            = NULL;
+
 nsCOMPtr  <nsIRollupListener> gRollupListener;
 nsWeakPtr                     gRollupWindow;
 
@@ -2019,7 +2023,10 @@
         domButton = nsMouseEvent::eLeftButton;
         break;
     }
-
+    
+    // set waiting for onButtonRelease event
+    gWaitingForButtonUp = PR_TRUE;
+    
     nsMouseEvent event(PR_TRUE, NS_MOUSE_BUTTON_DOWN, this, nsMouseEvent::eReal);
     event.button = domButton;
     InitButtonEvent(event, aEvent);
@@ -2034,6 +2041,27 @@
         InitButtonEvent(contextMenuEvent, aEvent);
         DispatchEvent(&contextMenuEvent, status);
     }
+    
+    // Dispatch all events which were appeared during handling OnButtonPressEvent 
+    if (gEventList) {
+        gint eventType;
+      
+        for (gint i=0; i<g_slist_length(gEventList); i++) {
+        
+            eventType = GPOINTER_TO_INT (g_slist_nth_data(gEventList, i));
+            nsMouseEvent eventnew(PR_TRUE, eventType, this, nsMouseEvent::eReal);
+            eventnew.button = domButton;
+            InitButtonEvent(eventnew, aEvent);
+
+            nsEventStatus status;
+            DispatchEvent(&eventnew, status);
+        }
+        g_slist_free (gEventList);
+        gEventList = NULL;
+    }
+    
+    gWaitingForButtonUp = PR_FALSE;
+    
 }
 
 void
@@ -2060,12 +2088,19 @@
         break;
     }
 
-    nsMouseEvent event(PR_TRUE, NS_MOUSE_BUTTON_UP, this, nsMouseEvent::eReal);
-    event.button = domButton;
-    InitButtonEvent(event, aEvent);
+    // If this event appeared during handling OnButtonPressEvent,
+    // put it to the queue
+    if (gWaitingForButtonUp) {
+        gEventList = g_slist_append (gEventList, GINT_TO_POINTER (NS_MOUSE_BUTTON_UP));
+    } else {
 
-    nsEventStatus status;
-    DispatchEvent(&event, status);
+        nsMouseEvent event(PR_TRUE, NS_MOUSE_BUTTON_UP, this, nsMouseEvent::eReal);
+        event.button = domButton;
+        InitButtonEvent(event, aEvent);
+
+        nsEventStatus status;
+        DispatchEvent(&event, status);
+    }
 }
 
 void
