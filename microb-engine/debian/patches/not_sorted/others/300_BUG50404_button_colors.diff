# change style of disabled text area
Index: mozilla/widget/src/gtk2/nsLookAndFeel.cpp
===================================================================
--- mozilla.orig/widget/src/gtk2/nsLookAndFeel.cpp
+++ mozilla/widget/src/gtk2/nsLookAndFeel.cpp
@@ -48,16 +48,17 @@
 
 nscolor   nsLookAndFeel::sInfoText = 0;
 nscolor   nsLookAndFeel::sInfoBackground = 0;
 nscolor   nsLookAndFeel::sMenuText = 0;
 nscolor   nsLookAndFeel::sMenuHover = 0;
 nscolor   nsLookAndFeel::sMenuHoverText = 0;
 nscolor   nsLookAndFeel::sMenuBackground = 0;
 nscolor   nsLookAndFeel::sButtonBackground = 0;
+nscolor   nsLookAndFeel::sTextDisabled = 0;
 nscolor   nsLookAndFeel::sButtonText = 0;
 nscolor   nsLookAndFeel::sButtonOuterLightBorder = 0;
 nscolor   nsLookAndFeel::sButtonInnerDarkBorder = 0;
 PRUnichar nsLookAndFeel::sInvisibleCharacter = PRUnichar('*');
 
 //-------------------------------------------------------------------------
 //
 // Query interface implementation
@@ -665,16 +666,19 @@
 
     gtk_widget_destroy(window);
 
     // invisible character styles
     GtkWidget *entry = gtk_entry_new();
     guint value;
     g_object_get (entry, "invisible-char", &value, NULL);
     sInvisibleCharacter = PRUnichar(value);
+    style = gtk_widget_get_style(entry);
+    if (style)
+        sTextDisabled = GDK_COLOR_TO_NS_RGB(style->bg[GTK_STATE_INSENSITIVE]);
     gtk_widget_destroy(entry);
 }
 
 // virtual
 PRUnichar
 nsLookAndFeel::GetPasswordCharacter()
 {
     return sInvisibleCharacter;
Index: mozilla/widget/src/gtk2/nsLookAndFeel.h
===================================================================
--- mozilla.orig/widget/src/gtk2/nsLookAndFeel.h
+++ mozilla/widget/src/gtk2/nsLookAndFeel.h
@@ -63,16 +63,17 @@
 
     static nscolor sInfoBackground;
     static nscolor sInfoText;
     static nscolor sMenuBackground;
     static nscolor sMenuText;
     static nscolor sMenuHover;
     static nscolor sMenuHoverText;
     static nscolor sButtonBackground;
+    static nscolor sTextDisabled;
     static nscolor sButtonText;
     static nscolor sButtonOuterLightBorder;
     static nscolor sButtonInnerDarkBorder;
     static PRUnichar sInvisibleCharacter;
 
     static void InitLookAndFeel();
     void InitWidget() {
         mWidget = gtk_invisible_new();
