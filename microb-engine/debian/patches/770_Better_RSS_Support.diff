diff -U 8 -prN mozilla-orig/browser/components/feeds/content/subscribe.css mozilla/browser/components/feeds/content/subscribe.css
--- mozilla-orig/browser/components/feeds/content/subscribe.css	1969-12-31 20:00:00.000000000 -0400
+++ mozilla/browser/components/feeds/content/subscribe.css	2008-01-29 14:03:02.000000000 -0400
@@ -0,0 +1,154 @@
+
+*[hidden] {
+  display: none;
+}
+
+html {
+  background: -moz-Dialog;
+  font: 3mm tahoma,arial,helvetica,sans-serif;
+}
+
+#feedBody {
+  border: 1px solid THreeDShadow;
+  padding: 3em;
+  -moz-padding-start: 30px;
+  margin: 2em auto;
+  background: -moz-Field;
+}
+
+#feedHeaderContainer {
+  border: 1px solid ThreeDShadow;
+  -moz-border-radius: 10px;
+  margin: -4em auto 0 auto;
+  background-color: InfoBackground;
+}
+
+#feedHeader {  
+  margin-top: 4.9em;
+  margin-bottom: 1em;
+  -moz-margin-start: 1.4em;
+  -moz-margin-end: 1em;
+  -moz-padding-start: 2.9em;
+  font-size: 110%;
+  background: url("chrome://browser/skin/feeds/feedIcon.png") 0% 10% no-repeat InfoBackground;
+  color: InfoText;
+}
+
+#feedHeader[dir="rtl"] {
+  background-position: 100% 10%;
+}
+
+#feedIntroText {
+  display: none;
+}
+
+#feedHeader[firstrun="true"] #feedIntroText {
+  padding-top: 0.1em;
+  -moz-padding-start: 0.6em;
+  display: block;
+}
+
+#feedHeader[firstrun="true"] > #feedSubscribeLine {
+  -moz-padding-start: 1.8em;
+}
+
+#feedSubscribeLine {
+  padding-top: 0.2em;
+}
+
+#alwaysUse {
+  padding: 5px;
+}
+
+
+#handlersMenuList > menupopup > menuitem {
+  -moz-padding-start: 23px;
+}
+
+#handlersMenuList > menupopup > menuitem.menuitem-iconic {
+  -moz-padding-start: 2px;
+}
+
+#handlersMenuList > menupopup > .menuitem-iconic  > .menu-iconic-left {
+  display: -moz-box;
+  min-width: 16px;
+  -moz-padding-end: 2px;
+}
+
+#feedHeader[dir="rtl"] #handlersMenuList > menupopup {
+  direction: rtl;
+}
+
+/* Don't print subscription UI */
+@media print {
+  #feedHeaderContainer {
+    display: none;
+  }
+}
+
+body {
+  margin: 0;
+  padding: 0 3em;
+  color: -moz-fieldText;
+  font: message-box;
+}
+
+h1 {
+  font-size: 160%;
+  border-bottom: 2px solid ThreeDLightShadow;
+  margin: 0 0 .2em 0;
+}
+
+h2 {
+  color: ThreeDDarkShadow;
+  font-size: 110%;
+  font-weight: normal;
+  margin: 0 0 .6em 0;
+}
+
+#feedTitleLink {
+  float: right;
+  -moz-margin-start: .6em;
+  -moz-margin-end: 0;
+  margin-top: 0;
+  margin-bottom: 0;
+}
+
+a[href] img {
+  border: none;
+}
+
+#feedTitleContainer {
+  -moz-margin-start: 0;
+  -moz-margin-end: .6em;
+  margin-top: 0;
+  margin-bottom: 0;
+}
+
+#feedTitleImage {
+  -moz-margin-start: .6em;
+  -moz-margin-end: 0;
+  margin-top: 0;
+  margin-bottom: 0;
+  max-width: 300px;
+  max-height: 150px;
+}
+
+.feedEntryContent {
+  font-size: 110%;
+}
+ 
+.link {
+  color: #0000FF;
+  text-decoration: underline;
+  cursor: pointer;
+}
+
+.link:hover:active {
+  color: #FF0000;
+}
+
+.lastUpdated {
+  font-size: 85%;
+  font-weight: normal;
+}
diff -U 8 -prN mozilla-orig/browser/components/feeds/content/subscribe.dtd mozilla/browser/components/feeds/content/subscribe.dtd
--- mozilla-orig/browser/components/feeds/content/subscribe.dtd	1969-12-31 20:00:00.000000000 -0400
+++ mozilla/browser/components/feeds/content/subscribe.dtd	2008-01-29 14:03:02.000000000 -0400
@@ -0,0 +1,16 @@
+<!ENTITY feedPage.title
+  "Viewing Feed">
+<!ENTITY feedSubscriptionInfo1a
+  "This is a &#8220;">
+<!ENTITY feedName
+  "feed">
+<!ENTITY feedSubscriptionInfo1b
+  "&#8221; of frequently changing content on this site.">
+<!ENTITY feedSubscriptionInfo2
+  "You can subscribe to this feed to receive updates when this content changes.">
+<!ENTITY feedSubscribeNow
+  "Subscribe Now">
+<!ENTITY subscribeUsing
+  "Subscribe to this feed using ">
+<!ENTITY feedLiveBookmarks
+  "Live Bookmarks">
diff -U 8 -prN mozilla-orig/browser/components/feeds/content/subscribe.xhtml mozilla/browser/components/feeds/content/subscribe.xhtml
--- mozilla-orig/browser/components/feeds/content/subscribe.xhtml	2008-01-29 13:41:49.000000000 -0400
+++ mozilla/browser/components/feeds/content/subscribe.xhtml	2008-01-29 14:03:03.000000000 -0400
@@ -4,57 +4,87 @@
   <!ENTITY % htmlDTD
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "DTD/xhtml1-strict.dtd">
   %htmlDTD;
   <!ENTITY % globalDTD
     SYSTEM "chrome://global/locale/global.dtd">
   %globalDTD;
   <!ENTITY % feedDTD
-    SYSTEM "chrome://browser/locale/feeds/subscribe.dtd">
+    SYSTEM "chrome://browser/content/feeds/subscribe.dtd">
   %feedDTD;
 ]>
 
 <?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
 
 <html id="feedHandler"
       xmlns="http://www.w3.org/1999/xhtml"
       xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
       xmlns:aaa="http://www.w3.org/2005/07/aaa">
   <head>
     <title>&feedPage.title;</title>
     <link rel="stylesheet"
-          href="chrome://browser/skin/feeds/subscribe.css"
+          href="chrome://browser/content/feeds/subscribe.css"
           type="text/css"
           media="all"/>
     <script type="application/x-javascript"
             src="chrome://browser/content/feeds/subscribe.js"/>
   </head>
   <body onload="SubscribeHandler.writeContent();" onunload="SubscribeHandler.uninit();">
     <div id="feedHeaderContainer">
       <div id="feedHeader" dir="&locale.dir;">
         <div id="feedIntroText">
           <p id="feedSubscriptionInfo1">
             &feedSubscriptionInfo1a;<strong>&feedName;</strong>&feedSubscriptionInfo1b;
           </p>
           <p id="feedSubscriptionInfo2">&feedSubscriptionInfo2;</p>
         </div>
 
-<!-- XXXmano this has to be in one line. Otherwise you would see
+<!-- XXXmano this can't have any whitespace in it.  Otherwise you would see
      how much XUL-in-XHTML sucks, see bug 348830 -->
-<div id="feedSubscribeLine"><xul:vbox><xul:hbox align="center"><xul:description id="subscribeUsingDescription">&subscribeUsing;</xul:description><xul:menulist id="handlersMenuList" aaa:labelledby="subscribeUsingDescription"><xul:menupopup menugenerated="true" id="handlersMenuPopup"><xul:menuitem id="liveBookmarksMenuItem" label="&feedLiveBookmarks;" class="menuitem-iconic" image="chrome://browser/skin/page-livemarks.png" selected="true"/><xul:menuseparator/></xul:menupopup></xul:menulist></xul:hbox><xul:hbox><xul:checkbox id="alwaysUse" checked="false"/></xul:hbox><xul:hbox align="center"><xul:spacer flex="1"/><span><xul:button label="&feedSubscribeNow;" id="subscribeButton"/></span></xul:hbox></xul:vbox></div></div>
-
+        <div id="feedSubscribeLine">
+          <form>
+            Subscribe to this feed using
+            <select id="handlersMenuList">
+              <option id="selectedAppMenuItem">_RSS Feed Reader_</option>
+              <option webhandlerurl="http://fusion.google.com/add?feedurl=%s">Google  </option>
+              <option webhandlerurl="http://add.my.yahoo.com/rss?url=%s">Yahoo  </option>
+              <option webhandlerurl="http://www.bloglines.com/login?r=/sub/%s">Bloglines  </option>
+            </select>
+            <br/>
+            <br/>
+            <input type="checkbox" name="alwaysUse" id="alwaysUse"/> Always use this reader
+            <br/>
+            <br/>
+            <input type="button" value="Subscribe Now" id="subscribeButton"/>
+          </form>
+	</div
+      ></div>
     </div>
 
-    <!-- XXXben - get rid of me when the feed processor is bug free! -->
-    <div id="feedError" style="display:none;" dir="&locale.dir;">
-      <h1>&error.title;</h1>
-      <p>&error.message;</p>
-      <p id="errorCode"/>
-    </div>
+	  <!--
+	  <xul:vbox>
+            <xul:hbox align="center">
+              <xul:description id="subscribeUsingDescription">&subscribeUsing;               </xul:description>
+              <xul:menulist id="handlersMenuList" aaa:labelledby="subscribeUsingDescription">
+                <xul:menupopup menugenerated="true" id="handlersMenuPopup">
+                    <xul:menuitem id="liveBookmarksMenuItem" label="&feedLiveBookmarks;" class="menuitem-iconic" image="chrome://browser/skin/page-livemarks.png" selected="true"/>
+                    <xul:menuseparator/>
+                </xul:menupopup>
+              </xul:menulist>
+            </xul:hbox>
+            <xul:hbox>
+              <xul:checkbox id="alwaysUse" checked="false"/>
+            </xul:hbox>
+            <xul:hbox align="center">
+                <xul:spacer flex="1"/>
+                <xul:button label="&feedSubscribeNow;" id="subscribeButton"/>
+            </xul:hbox>
+        </xul:vbox>
+	-->
 
     <script type="application/x-javascript">
       SubscribeHandler.init();
     </script>
 
     <div id="feedBody">
       <div id="feedTitle">
         <a id="feedTitleLink">
diff -U 8 -prN mozilla-orig/browser/components/feeds/jar.mn mozilla/browser/components/feeds/jar.mn
--- mozilla-orig/browser/components/feeds/jar.mn	2008-01-29 13:41:49.000000000 -0400
+++ mozilla/browser/components/feeds/jar.mn	2008-01-29 14:03:03.000000000 -0400
@@ -1,3 +1,8 @@
 browser.jar:
-*   content/browser/feeds/subscribe.xhtml               (content/subscribe.xhtml) 
-*   content/browser/feeds/subscribe.js                  (content/subscribe.js)
+% content browser %content/browser/ xpcnativewrappers=yes
+* content/browser/feeds/subscribe.xhtml               (content/subscribe.xhtml) 
+* content/browser/feeds/subscribe.js                  (content/subscribe.js)
+* content/browser/feeds/subscribe.dtd                 (content/subscribe.dtd)
+* content/browser/feeds/subscribe.css                 (content/subscribe.css)
+
+
diff -U 8 -prN mozilla-orig/browser/components/feeds/src/FeedConverter.js mozilla/browser/components/feeds/src/FeedConverter.js
--- mozilla-orig/browser/components/feeds/src/FeedConverter.js	2008-01-29 13:41:49.000000000 -0400
+++ mozilla/browser/components/feeds/src/FeedConverter.js	2008-01-29 14:27:19.000000000 -0400
@@ -345,23 +345,28 @@ var FeedResultService = {
   /**
    * See nsIFeedService.idl
    */
   addToClientReader: function FRS_addToClientReader(spec, title, subtitle) {
     var prefs =   
         Cc["@mozilla.org/preferences-service;1"].
         getService(Ci.nsIPrefBranch);
 
-    var handler = safeGetCharPref(PREF_SELECTED_ACTION, "bookmarks");
+    var handler = safeGetCharPref(PREF_SELECTED_ACTION, "ask");
     if (handler == "ask" || handler == "reader")
-      handler = safeGetCharPref(PREF_SELECTED_READER, "bookmarks");
+      handler = safeGetCharPref(PREF_SELECTED_READER, "ask");
 
     switch (handler) {
     case "client":
-      var clientApp = prefs.getComplexValue(PREF_SELECTED_APP, Ci.nsILocalFile);
+      //var clientApp = prefs.getComplexValue(PREF_SELECTED_APP, Ci.nsILocalFile);
+      var clientAppPath = prefs.getCharPref(PREF_SELECTED_APP);
+      var clientApp = Components.classes["@mozilla.org/file/local;1"]
+        .createInstance(Components.interfaces.nsILocalFile);
+      clientApp.initWithPath(clientAppPath);
+
 #ifdef XP_MACOSX
       // On OS X, the built in feed dispatcher (Safari) sends feeds to other
       // applications (When Default Reader is adjusted) in the following format:
       //
       // http urls: replace scheme with feed, e.g.
       // http://foo.com/index.rdf -> feed://foo.com/index.rdf
       // other urils: prepend feed: scheme, e.g.
       // https://foo.com/index.rdf -> feed:https://foo.com/index.rdf
diff -U 8 -prN mozilla-orig/browser/components/feeds/src/FeedWriter.js mozilla/browser/components/feeds/src/FeedWriter.js
--- mozilla-orig/browser/components/feeds/src/FeedWriter.js	2008-01-29 13:41:49.000000000 -0400
+++ mozilla/browser/components/feeds/src/FeedWriter.js	2008-01-29 14:03:03.000000000 -0400
@@ -192,16 +192,17 @@ FeedWriter.prototype = {
 
       node = node.nextSibling;
     }
 
     return null;
   },
 
   _setCheckboxCheckedState: function FW__setCheckboxCheckedState(aCheckbox, aValue) {
+    LOG ("_setCheckboxCheckedState");
     // see checkbox.xml
     var change = (aValue != (aCheckbox.getAttribute('checked') == 'true'));
     if (aValue)
       aCheckbox.setAttribute('checked', 'true');
     else
       aCheckbox.removeAttribute('checked');
 
     if (change) {
@@ -522,16 +523,17 @@ FeedWriter.prototype = {
       }
     }
     catch(ex) { }
 
     return false;
   },
 
   _setAlwaysUseCheckedState: function FW__setAlwaysUseCheckedState() {
+    LOG ("_setAlwaysUseCheckedState");
     var checkbox = this._document.getElementById("alwaysUse");
     if (checkbox) {
       var alwaysUse = false;
       try {
         var prefs = Cc["@mozilla.org/preferences-service;1"].
                     getService(Ci.nsIPrefBranch);
         if (prefs.getCharPref(PREF_SELECTED_ACTION) != "ask")
           alwaysUse = true;
@@ -552,23 +554,41 @@ FeedWriter.prototype = {
       }
     }
   },
 
   /**
    * See nsIDOMEventListener
    */
   handleEvent: function(event) {
+    LOG ("handleEvent");
     // see comments in the write method
     event = new XPCNativeWrapper(event);
     if (event.target.ownerDocument != this._document) {
       LOG("FeedWriter.handleEvent: Someone passed the feed writer as a listener to the events of another document!");
       return;
     }
 
+    if (event.type == "click") {
+      switch (event.target.id) {
+        case "subscribeButton":
+          this.subscribe();
+          break;
+      }
+    }
+
+    if (event.type == "change") {
+      switch (event.target.id) {
+        case "useAsDefault":
+          //this.checkOnChange();
+          break;
+      }
+    }
+
+
     if (event.type == "command") {
       switch (event.target.id) {
         case "subscribeButton":
           this.subscribe();
           break;
         case "chooseApplicationMenuItem":
           /* Bug 351263: Make sure to not steal focus if the "Choose
            * Application" item is being selected with the keyboard. We do this
@@ -602,17 +622,17 @@ FeedWriter.prototype = {
     try {
       handler = prefs.getCharPref(PREF_SELECTED_READER);
     }
     catch (ex) { }
     
     switch (handler) {
       case "web": {
         var handlersMenuList = this._document.getElementById("handlersMenuList");
-        if (handlersMenuList) {
+         if (handlersMenuList) {
           var url = prefs.getComplexValue(PREF_SELECTED_WEB, Ci.nsISupportsString).data;
           var handlers =
             handlersMenuList.getElementsByAttribute("webhandlerurl", url);
           if (handlers.length == 0) {
             LOG("FeedWriter._setSelectedHandler: selected web handler isn't in the menulist")
             return;
           }
 
@@ -650,16 +670,30 @@ FeedWriter.prototype = {
           this._document.getElementById("liveBookmarksMenuItem");
         if (liveBookmarksMenuItem)
           liveBookmarksMenuItem.doCommand();
       } 
     }
   },
 
   _initSubscriptionUI: function FW__initSubscriptionUI() {
+    LOG ("_initSubscriptionUI");
+    // Set up the "Subscribe Now" button
+    this._document
+        .getElementById("subscribeButton")
+        .addEventListener("click", this, false);
+
+    this._document
+        .getElementById("alwaysUse")
+        .addEventListener("change", this, false);
+
+    // "Always use..." checkbox initial state
+    this._setAlwaysUseCheckedState();
+    //this._setAlwaysUseLabel();
+
     var handlersMenuPopup =
       this._document.getElementById("handlersMenuPopup");
     if (!handlersMenuPopup)
       return;
 
     // Last-selected application
     var selectedApp;
     menuItem = this._document.createElementNS(XUL_NS, "menuitem");
@@ -894,30 +928,31 @@ FeedWriter.prototype = {
   },
 
   subscribe: function FW_subscribe() {
     // Subscribe to the feed using the selected handler and save prefs
     var prefs =   
         Cc["@mozilla.org/preferences-service;1"].
         getService(Ci.nsIPrefBranch);
     var defaultHandler = "reader";
-    var useAsDefault = this._document.getElementById("alwaysUse")
-                                     .getAttribute("checked");
+    var useAsDefault = this._document.getElementById("alwaysUse").checked;
+                                     //.getAttribute("checked");
 
     var handlersMenuList = this._document.getElementById("handlersMenuList");
-    var selectedItem = this._getSelectedItemFromMenulist(handlersMenuList);
+    var selectedItem = handlersMenuList.options[handlersMenuList.selectedIndex];
+    //var selectedItem = this._getSelectedItemFromMenulist(handlersMenuList);
 
     // Show the file picker before subscribing if the
     // choose application menuitem was choosen using the keyboard
-    if (selectedItem.id == "chooseApplicationMenuItem") {
-      if (!this._chooseClientApp())
-        return;
+    //if (selectedItem.id == "chooseApplicationMenuItem") {
+    //  if (!this._chooseClientApp())
+    //    return;
       
-      selectedItem = this._getSelectedItemFromMenulist(handlersMenuList);
-    }
+    //  selectedItem = this._getSelectedItemFromMenulist(handlersMenuList);
+    //}
 
     if (selectedItem.hasAttribute("webhandlerurl")) {
       var webURI = selectedItem.getAttribute("webhandlerurl");
       prefs.setCharPref(PREF_SELECTED_READER, "web");
 
       var supportsString = Cc["@mozilla.org/supports-string;1"].
                            createInstance(Ci.nsISupportsString);
       supportsString.data = webURI;
@@ -935,38 +970,40 @@ FeedWriter.prototype = {
         this._window.location.href =
           handler.getHandlerURI(this._window.location.href);
       }
     }
     else {
       switch (selectedItem.id) {
         case "selectedAppMenuItem":
           prefs.setCharPref(PREF_SELECTED_READER, "client");
-          prefs.setComplexValue(PREF_SELECTED_APP, Ci.nsILocalFile, 
-                                this.selectedApplicationItemWrapped.file);
-          break;
-        case "defaultHandlerMenuItem":
-          prefs.setCharPref(PREF_SELECTED_READER, "client");
-          prefs.setComplexValue(PREF_SELECTED_APP, Ci.nsILocalFile, 
-                                this.defaultSystemReaderItemWrapped.file);
-          break;
-        case "liveBookmarksMenuItem":
-          defaultHandler = "bookmarks";
-          prefs.setCharPref(PREF_SELECTED_READER, "bookmarks");
+          //prefs.setComplexValue(PREF_SELECTED_APP, Ci.nsILocalFile, 
+                                //this.selectedApplicationItemWrapped.file);
+          prefs.setCharPref(PREF_SELECTED_APP, "/usr/share/browser/scripts/osso_rss_feed_dbus_script_call.sh");
+
           break;
+    //    case "defaultHandlerMenuItem":
+    //      prefs.setCharPref(PREF_SELECTED_READER, "client");
+    //      prefs.setComplexValue(PREF_SELECTED_APP, Ci.nsILocalFile, 
+    //                            this.defaultSystemReaderItemWrapped.file);
+    //      break;
+    //    case "liveBookmarksMenuItem":
+    //      defaultHandler = "bookmarks";
+    //      prefs.setCharPref(PREF_SELECTED_READER, "bookmarks");
+    //      break;
       }
       var feedService = Cc["@mozilla.org/browser/feeds/result-service;1"].
-                        getService(Ci.nsIFeedResultService);
+                       getService(Ci.nsIFeedResultService);
 
       // Pull the title and subtitle out of the document
       var feedTitle = this._document.getElementById(TITLE_ID).textContent;
       var feedSubtitle =
-        this._document.getElementById(SUBTITLE_ID).textContent;
+          this._document.getElementById(SUBTITLE_ID).textContent;
       feedService.addToClientReader(this._window.location.href,
-                                    feedTitle, feedSubtitle);
+                                  feedTitle, feedSubtitle);
     }
 
     // If "Always use..." is checked, we should set PREF_SELECTED_ACTION
     // to either "reader" (If a web reader or if an application is selected),
     // or to "bookmarks" (if the live bookmarks option is selected).
     // Otherwise, we should set it to "ask"
     if (useAsDefault)
       prefs.setCharPref(PREF_SELECTED_ACTION, defaultHandler);
diff -U 8 -prN mozilla-orig/browser/components/feeds/src/Makefile.in mozilla/browser/components/feeds/src/Makefile.in
--- mozilla-orig/browser/components/feeds/src/Makefile.in	2008-01-29 13:41:49.000000000 -0400
+++ mozilla/browser/components/feeds/src/Makefile.in	2008-01-29 14:03:03.000000000 -0400
@@ -41,27 +41,28 @@ VPATH		= @srcdir@
 
 include $(DEPTH)/config/autoconf.mk
 
 MODULE = browser_feeds
 LIBRARY_NAME = browser_feeds_s
 FORCE_STATIC_LIB = 1
 FORCE_USE_PIC = 1
 USE_STATIC_LIBS = 1
+LIBXUL_LIBRARY = 1
 
 DEFINES += \
 	-DMOZ_APP_NAME=$(MOZ_APP_NAME) \
 	-DMOZ_APP_DISPLAYNAME=$(MOZ_APP_DISPLAYNAME) \
 	$(NULL)
 
 EXTRA_PP_COMPONENTS = \
 	FeedConverter.js \
 	FeedWriter.js \
 	WebContentConverter.js \
 	$(NULL)
 
 REQUIRES = xpcom string necko caps js xpconnect mimetype
 
 CPPSRCS = nsFeedSniffer.cpp nsAboutFeeds.cpp
 
-LOCAL_INCLUDES = -I$(srcdir)/../../build
+LOCAL_INCLUDES = -I$(srcdir)/../../../../toolkit/components/build/
 
 include $(topsrcdir)/config/rules.mk
diff -U 8 -prN mozilla-orig/browser/components/feeds/src/WebContentConverter.js mozilla/browser/components/feeds/src/WebContentConverter.js
--- mozilla-orig/browser/components/feeds/src/WebContentConverter.js	2008-01-29 13:41:49.000000000 -0400
+++ mozilla/browser/components/feeds/src/WebContentConverter.js	2008-01-29 14:03:03.000000000 -0400
@@ -650,19 +650,20 @@ var WebContentConverterRegistrar = {
      * where a user manually removes a reader, but that's not supported yet!
      */
     var vals = branch.getChildList("", {});
     if (vals.length == 0)
       return;
 
     try {
       var type = branch.getCharPref("type");
-      var uri = branch.getComplexValue("uri", Ci.nsIPrefLocalizedString).data;
-      var title = branch.getComplexValue("title",
-                                         Ci.nsIPrefLocalizedString).data;
+      //var uri = branch.getComplexValue("uri", Ci.nsIPrefLocalizedString).data;
+      //var title = branch.getComplexValue("title",Ci.nsIPrefLocalizedString).data;
+      var uri = branch.getCharPref("uri");
+      var title = branch.getCharPref("title");;
       this._registerContentHandler(type, uri, title);
     }
     catch(ex) {
       // do nothing, the next branch might have values
     }
   },
 
   /**
@@ -718,21 +719,24 @@ var WebContentConverterRegistrar = {
    */
   observe: function WCCR_observe(subject, topic, data) {
     var os = 
         Cc["@mozilla.org/observer-service;1"].
         getService(Ci.nsIObserverService);
     switch (topic) {
     case "app-startup":
       os.addObserver(this, "profile-after-change", false);
+      os.addObserver(this, "xpcom-shutdown", false);
       break;
     case "profile-after-change":
       os.removeObserver(this, "profile-after-change");
       this._init();
-      break;      
+      break;
+    case "xpcom-shutdown":
+      this.classID = null;
     }
   },
   
   /**
    * See nsIFactory
    */
   createInstance: function WCCR_createInstance(outer, iid) {
     if (outer != null)
diff -U 8 -prN mozilla-orig/browser/components/feeds/src/nsFeedSniffer.cpp mozilla/browser/components/feeds/src/nsFeedSniffer.cpp
--- mozilla-orig/browser/components/feeds/src/nsFeedSniffer.cpp	2008-01-29 13:41:49.000000000 -0400
+++ mozilla/browser/components/feeds/src/nsFeedSniffer.cpp	2008-01-29 14:03:03.000000000 -0400
@@ -40,17 +40,18 @@
 
 #include "prmem.h"
 
 #include "nsNetCID.h"
 #include "nsXPCOM.h"
 #include "nsCOMPtr.h"
 #include "nsStringStream.h"
 
-#include "nsBrowserCompsCID.h"
+//#include "nsBrowserCompsCID.h"
+#include "nsToolkitCompsCID.h"
 
 #include "nsICategoryManager.h"
 #include "nsIServiceManager.h"
 #include "nsComponentManagerUtils.h"
 #include "nsServiceManagerUtils.h"
 
 #include "nsIStreamConverterService.h"
 #include "nsIStreamConverter.h"
@@ -73,18 +74,18 @@ NS_IMPL_ISUPPORTS2(nsFeedSniffer, nsICon
 
 nsresult
 nsFeedSniffer::ConvertEncodedData(nsIRequest* request,
                                   const PRUint8* data,
                                   PRUint32 length)
 {
   nsresult rv = NS_OK;
 
- mDecodedData = "";
- nsCOMPtr<nsIHttpChannel> httpChannel(do_QueryInterface(request));
+  mDecodedData = "";
+  nsCOMPtr<nsIHttpChannel> httpChannel(do_QueryInterface(request));
   if (!httpChannel)
     return NS_ERROR_NO_INTERFACE;
 
   nsCAutoString contentEncoding;
   httpChannel->GetResponseHeader(NS_LITERAL_CSTRING("Content-Encoding"), 
                                  contentEncoding);
   if (!contentEncoding.IsEmpty()) {
     nsCOMPtr<nsIStreamConverterService> converterService(do_GetService(NS_STREAMCONVERTERSERVICE_CONTRACTID));
@@ -243,21 +244,34 @@ IsDocumentElement(const char *start, con
  * @param   substring
  *          The substring being tested for existence and root-ness.
  * @returns PR_TRUE if the substring exists and is the documentElement, PR_FALSE
  *          otherwise.
  */
 static PRBool
 ContainsTopLevelSubstring(nsACString& dataString, const char *substring) 
 {
+  /*
   PRInt32 offset = dataString.Find(substring);
   if (offset == -1)
     return PR_FALSE;
 
   const char *begin = dataString.BeginReading();
+  */
+
+  nsCString s(dataString);
+  const char *data = (const char *) s.get();
+  const char *begin = strstr(data, substring);
+
+  if (!begin)
+    return PR_FALSE;
+
+  PRInt32 offset = strlen(data) - strlen(begin);
+
+  begin = strdup (data);
 
   // Only do the validation when we find the substring.
   return IsDocumentElement(begin, begin + offset);
 }
 
 NS_IMETHODIMP
 nsFeedSniffer::GetMIMETypeFromContent(nsIRequest* request, 
                                       const PRUint8* data, 
@@ -343,17 +357,23 @@ nsFeedSniffer::GetMIMETypeFromContent(ns
 
   // We cap the number of bytes to scan at MAX_BYTES to prevent picking up 
   // false positives by accidentally reading document content, e.g. a "how to
   // make a feed" page.
   if (length > MAX_BYTES)
     length = MAX_BYTES;
 
   // Thus begins the actual sniffing.
-  nsDependentCSubstring dataString((const char*)testData, length);
+  //  nsDependentCSubstring dataString((const char*)testData, length);
+  char *tmp_str = strdup(testData);
+  strncpy(tmp_str, testData, length);
+  if (!tmp_str)  
+    return NS_OK; 
+
+  nsCString dataString((const char *)tmp_str);
 
   PRBool isFeed = PR_FALSE;
 
   // RSS 0.91/0.92/2.0
   isFeed = ContainsTopLevelSubstring(dataString, "<rss");
 
   // Atom 1.0
   if (!isFeed)
@@ -362,18 +382,18 @@ nsFeedSniffer::GetMIMETypeFromContent(ns
   // RSS 1.0
   if (!isFeed) {
     isFeed = ContainsTopLevelSubstring(dataString, "<rdf:RDF") &&
       dataString.Find(NS_RDF) &&
       dataString.Find(NS_RSS);
   }
 
   // If we sniffed a feed, coerce our internal type
-  if (isFeed && !HasAttachmentDisposition(channel))
-    sniffedType.AssignLiteral(TYPE_MAYBE_FEED);
+  if (isFeed && !HasAttachmentDisposition(channel)) 
+    sniffedType.AssignLiteral(TYPE_MAYBE_FEED); 
   else
     sniffedType.Truncate();
   return NS_OK;
 }
 
 NS_IMETHODIMP
 nsFeedSniffer::OnStartRequest(nsIRequest* request, nsISupports* context)
 {
diff -U 8 -prN mozilla-orig/browser/components/feeds/src/nsFeedSniffer.h mozilla/browser/components/feeds/src/nsFeedSniffer.h
--- mozilla-orig/browser/components/feeds/src/nsFeedSniffer.h	2008-01-29 13:41:49.000000000 -0400
+++ mozilla/browser/components/feeds/src/nsFeedSniffer.h	2008-01-29 14:03:03.000000000 -0400
@@ -34,17 +34,23 @@
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 
 #include "nsIGenericFactory.h"
 #include "nsIContentSniffer.h"
 #include "nsIStreamListener.h"
+#ifdef MOZILLA_INTERNAL_API
+#include "nsString.h"
+#include "nsXPIDLString.h"
+#include "nsReadableUtils.h"
+#else
 #include "nsStringAPI.h"
+#endif
 
 class nsFeedSniffer : public nsIContentSniffer, nsIStreamListener
 {
 public:
   NS_DECL_ISUPPORTS
   NS_DECL_NSICONTENTSNIFFER
   NS_DECL_NSIREQUESTOBSERVER
   NS_DECL_NSISTREAMLISTENER
diff -U 8 -prN mozilla-orig/browser/components/shell/src/Makefile.in mozilla/browser/components/shell/src/Makefile.in
--- mozilla-orig/browser/components/shell/src/Makefile.in	2008-01-29 13:41:50.000000000 -0400
+++ mozilla/browser/components/shell/src/Makefile.in	2008-01-29 14:02:55.000000000 -0400
@@ -41,16 +41,17 @@ srcdir    = @srcdir@
 VPATH   = @srcdir@
 
 include $(DEPTH)/config/autoconf.mk
 
 MODULE = shellservice
 FORCE_STATIC_LIB = 1
 FORCE_USE_PIC = 1
 USE_STATIC_LIBS = 1
+LIBXUL_LIBRARY = 1
 
 REQUIRES	= \
 		  xpcom \
 		  string \
 		  uriloader \
 		  webbrowserpersist \
 		  dom \
 		  intl \
@@ -81,17 +82,21 @@ ifdef CPPSRCS
 LIBRARY_NAME = shellservice_s
 endif
 
 include $(topsrcdir)/config/rules.mk
 
 DEFINES += -DMOZ_APP_NAME=\"$(MOZ_APP_NAME)\"
 
 JS_SET_BROWSER_COMPONENT = nsSetDefaultBrowser.js
+EXTRA_COMPONENTS = nsSetDefaultBrowser.js
 
 CXXFLAGS += $(TK_CFLAGS)
 
 libs::
 	$(INSTALL) $(srcdir)/$(JS_SET_BROWSER_COMPONENT) $(DIST)/bin/components
 
+install::
+	$(SYSINSTALL) $(IFLAGS1) $(srcdir)/$(JS_SET_BROWSER_COMPONENT) $(DESTDIR)$(mozappdir)/components
+
 clobber::
 	rm -f $(DIST)/lib/$(LIBRARY_NAME).lib
-	rm -f $(DIST)/bin/components/$(JS_SET_BROWSER_COMPONENT)
+# 	rm -f $(DIST)/bin/components/$(JS_SET_BROWSER_COMPONENT)
diff -U 8 -prN mozilla-orig/browser/components/shell/src/nsGNOMEShellService.cpp mozilla/browser/components/shell/src/nsGNOMEShellService.cpp
--- mozilla-orig/browser/components/shell/src/nsGNOMEShellService.cpp	2008-01-29 13:41:50.000000000 -0400
+++ mozilla/browser/components/shell/src/nsGNOMEShellService.cpp	2008-01-29 14:02:55.000000000 -0400
@@ -38,17 +38,17 @@
 #include "nsGNOMEShellService.h"
 #include "nsShellService.h"
 #include "nsIServiceManager.h"
 #include "nsILocalFile.h"
 #include "nsIProperties.h"
 #include "nsDirectoryServiceDefs.h"
 #include "nsIPrefService.h"
 #include "prenv.h"
-#include "nsStringAPI.h"
+
 #include "nsIGConfService.h"
 #include "nsIGnomeVFSService.h"
 #include "nsIStringBundle.h"
 #include "gfxIImageFrame.h"
 #include "nsIOutputStream.h"
 #include "nsIProcess.h"
 #include "nsNetUtil.h"
 #include "nsIDOMHTMLImageElement.h"
@@ -524,25 +524,25 @@ nsGNOMEShellService::GetDesktopBackgroun
   // The result must be in RGB order with the high 8 bits zero.
   *aColor = (red << 16 | green << 8  | blue);
   return NS_OK;
 }
 
 static void
 ColorToHex(PRUint32 aColor, nsCString& aResult)
 {
-  char *buf = aResult.BeginWriting(7);
-  if (!buf)
-    return;
-
-  PRUint8 red = (aColor >> 16);
-  PRUint8 green = (aColor >> 8) & 0xff;
-  PRUint8 blue = aColor & 0xff;
-
-  PR_snprintf(buf, 8, "#%02x%02x%02x", red, green, blue);
+//   char *buf = aResult.BeginWriting(7);
+//   if (!buf)
+//     return;
+// 
+//   PRUint8 red = (aColor >> 16);
+//   PRUint8 green = (aColor >> 8) & 0xff;
+//   PRUint8 blue = aColor & 0xff;
+// 
+//   PR_snprintf(buf, 8, "#%02x%02x%02x", red, green, blue);
 }
 
 NS_IMETHODIMP
 nsGNOMEShellService::SetDesktopBackgroundColor(PRUint32 aColor)
 {
   nsCOMPtr<nsIGConfService> gconf = do_GetService(NS_GCONFSERVICE_CONTRACTID);
 
   nsCString colorString;
diff -U 8 -prN mozilla-orig/browser/components/shell/src/nsGNOMEShellService.h mozilla/browser/components/shell/src/nsGNOMEShellService.h
--- mozilla-orig/browser/components/shell/src/nsGNOMEShellService.h	2008-01-29 13:41:50.000000000 -0400
+++ mozilla/browser/components/shell/src/nsGNOMEShellService.h	2008-01-29 14:02:55.000000000 -0400
@@ -33,17 +33,23 @@
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 #ifndef nsgnomeshellservice_h____
 #define nsgnomeshellservice_h____
 
 #include "nsIShellService.h"
+#ifdef MOZILLA_INTERNAL_API
+#include "nsString.h"
+#include "nsXPIDLString.h"
+#include "nsReadableUtils.h"
+#else
 #include "nsStringAPI.h"
+#endif
 
 class nsGNOMEShellService : public nsIShellService
 {
 public:
   nsGNOMEShellService() : mCheckedThisSession(PR_FALSE) { }
 
   NS_DECL_ISUPPORTS
   NS_DECL_NSISHELLSERVICE
diff -U 8 -prN mozilla-orig/toolkit/components/Makefile.in mozilla/toolkit/components/Makefile.in
--- mozilla-orig/toolkit/components/Makefile.in	2008-01-29 13:41:31.000000000 -0400
+++ mozilla/toolkit/components/Makefile.in	2008-01-29 14:04:27.000000000 -0400
@@ -62,17 +62,17 @@ DIRS += \
 
 ifneq (,$(filter cocoa, $(MOZ_WIDGET_TOOLKIT)))
 TOOL_DIRS += alerts
 else
 DIRS += alerts
 endif
 
 ifdef MOZ_FEEDS
-DIRS += feeds
+DIRS += feeds browser-feeds shell
 endif
 
 ifdef MOZ_PLACES
 ifdef MOZ_STORAGE
 DIRS += places
 endif
 endif
 
diff -U 8 -prN mozilla-orig/toolkit/components/build/Makefile.in mozilla/toolkit/components/build/Makefile.in
--- mozilla-orig/toolkit/components/build/Makefile.in	2008-01-29 13:41:31.000000000 -0400
+++ mozilla/toolkit/components/build/Makefile.in	2008-01-29 14:04:41.000000000 -0400
@@ -82,29 +82,33 @@ REQUIRES = 	\
 		find \
 		gfx \
 		locale \
 		unicharutil \
 		xuldoc \
 		alerts \
 		url-classifier \
 		feeds \
+		browser-feeds \
+		shellservice \
 		storage \
 		$(NULL)
 
 EXPORTS = nsToolkitCompsCID.h
 
 CPPSRCS = nsToolkitCompsModule.cpp
 
 LOCAL_INCLUDES = \
 	-I$(srcdir)/../downloads/src \
 	-I$(srcdir)/../startup/src \
 	-I$(srcdir)/../typeaheadfind/src \
 	-I$(srcdir)/../url-classifier/src \
 	-I$(srcdir)/../feeds/src \
+	-I$(srcdir)/../browser-feeds/src \
+	-I$(srcdir)/../shell/src \
 	$(NULL)
 
 ifdef ALERTS_SERVICE
 LOCAL_INCLUDES += \
 	-I$(srcdir)/../alerts/src \
 	$(NULL)
 endif
 
@@ -132,16 +136,22 @@ SHARED_LIBRARY_LIBS += ../alerts/src/mac
 endif
 
 ifdef MOZ_URL_CLASSIFIER
 SHARED_LIBRARY_LIBS += ../url-classifier/src/$(LIB_PREFIX)urlclassifier_s.$(LIB_SUFFIX)
 endif
 
 ifdef MOZ_FEEDS
 SHARED_LIBRARY_LIBS += ../feeds/src/$(LIB_PREFIX)feed_s.$(LIB_SUFFIX)
+SHARED_LIBRARY_LIBS += ../browser-feeds/src/$(LIB_PREFIX)browser_feeds_s.$(LIB_SUFFIX)
+endif
+
+ifneq (,$(filter windows mac cocoa gtk2, $(MOZ_WIDGET_TOOLKIT)))
+SHARED_LIBRARY_LIBS += ../shell/src/$(LIB_PREFIX)shellservice_s.$(LIB_SUFFIX) \
+	$(NULL)
 endif
 
 SHARED_LIBRARY_LIBS += ../typeaheadfind/src/$(LIB_PREFIX)fastfind_s.$(LIB_SUFFIX)
 EXTRA_DSO_LIBS = gkgfx
 
 EXTRA_DSO_LDOPTS += \
 	$(LIBS_DIR) \
 	$(EXTRA_DSO_LIBS) \
@@ -153,9 +163,17 @@ EXTRA_DSO_LDOPTS += \
 ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
 EXTRA_DSO_LDOPTS += $(TK_LIBS)
 endif
 
 ifeq ($(OS_ARCH),WINNT)
 OS_LIBS	+= $(call EXPAND_LIBNAME,shell32 ole32)
 endif
 
+# Mac: Need to link with CoreFoundation for Mac Migrators (PList reading code)
+# GTK2: Need to link with glib for GNOME shell service
+ifneq (,$(filter mac cocoa gtk2,$(MOZ_WIDGET_TOOLKIT)))
+EXTRA_DSO_LDOPTS += \
+  $(TK_LIBS) \
+  $(NULL)
+endif
+
 include $(topsrcdir)/config/rules.mk
diff -U 8 -prN mozilla-orig/toolkit/components/build/nsToolkitCompsCID.h mozilla/toolkit/components/build/nsToolkitCompsCID.h
--- mozilla-orig/toolkit/components/build/nsToolkitCompsCID.h	2008-01-29 13:41:31.000000000 -0400
+++ mozilla/toolkit/components/build/nsToolkitCompsCID.h	2008-01-29 14:05:22.000000000 -0400
@@ -172,8 +172,23 @@
 #define NS_NAVBOOKMARKSSERVICE_CID \
 { 0x9de95a0c, 0x39a4, 0x4d64, {0x9a, 0x53, 0x17, 0x94, 0x0d, 0xd7, 0xca, 0xbb}}
 
 #define NS_MORKHISTORYIMPORTER_CID \
 { 0x428e6d12, 0x9c6d, 0x436f, {0xb7, 0xa3, 0x6c, 0xa5, 0xf4, 0x80, 0x92, 0x12}}
 
 #define NS_FAVICONSERVICE_CID \
 { 0x984e3259, 0x9266, 0x49cf, { 0xb6, 0x05, 0x60, 0xb0, 0x22, 0xa0, 0x07, 0x56 } }
+
+#define NS_FEEDSNIFFER_CID \
+{ 0x6893e69, 0x71d8, 0x4b23, { 0x81, 0xeb, 0x80, 0x31, 0x4d, 0xaf, 0x3e, 0x66 } }
+
+#define NS_FEEDSNIFFER_CONTRACTID \
+"@mozilla.org/browser/feeds/sniffer;1"
+
+#define NS_ABOUTFEEDS_CID \
+{ 0x12ff56ec, 0x58be, 0x402c, { 0xb0, 0x57, 0x1, 0xf9, 0x61, 0xde, 0x96, 0x9b } }
+
+#define NS_SHELLSERVICE_CID \
+{ 0x63c7b9f4, 0xcc8, 0x43f8, { 0xb6, 0x66, 0xa, 0x66, 0x16, 0x55, 0xcb, 0x73 } }
+
+#define NS_SHELLSERVICE_CONTRACTID \
+"@mozilla.org/browser/shell-service;1"
diff -U 8 -prN mozilla-orig/toolkit/components/build/nsToolkitCompsModule.cpp mozilla/toolkit/components/build/nsToolkitCompsModule.cpp
--- mozilla-orig/toolkit/components/build/nsToolkitCompsModule.cpp	2008-01-29 13:41:31.000000000 -0400
+++ mozilla/toolkit/components/build/nsToolkitCompsModule.cpp	2008-01-29 14:05:22.000000000 -0400
@@ -61,18 +61,23 @@
 #ifdef MOZ_URL_CLASSIFIER
 #include "nsUrlClassifierDBService.h"
 #include "nsUrlClassifierStreamUpdater.h"
 #include "nsUrlClassifierUtils.h"
 #endif
 
 #ifdef MOZ_FEEDS
 #include "nsScriptableUnescapeHTML.h"
+#include "nsFeedSniffer.h"
+#include "nsAboutFeeds.h"
 #endif
 
+#ifdef MOZ_WIDGET_GTK2
+#include "nsGNOMEShellService.h"
+#endif
 /////////////////////////////////////////////////////////////////////////////
 
 NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsAppStartup, Init)
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsUserInfo)
 
 #ifdef ALERTS_SERVICE
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsAlertsService)
 #endif
@@ -95,18 +100,22 @@ NS_GENERIC_FACTORY_CONSTRUCTOR(nsTypeAhe
 NS_GENERIC_FACTORY_SINGLETON_CONSTRUCTOR(nsUrlClassifierDBService,
                                          nsUrlClassifierDBService::GetInstance)
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsUrlClassifierStreamUpdater)
 NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsUrlClassifierUtils, Init)
 #endif
 
 #ifdef MOZ_FEEDS
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsScriptableUnescapeHTML)
+NS_GENERIC_FACTORY_CONSTRUCTOR(nsFeedSniffer)
 #endif
 
+#ifdef MOZ_WIDGET_GTK2
+NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsGNOMEShellService, Init)
+#endif
 /////////////////////////////////////////////////////////////////////////////
 
 static const nsModuleComponentInfo components[] =
 {
   { "App Startup Service",
     NS_TOOLKIT_APPSTARTUP_CID,
     NS_APPSTARTUP_CONTRACTID,
     nsAppStartupConstructor },
@@ -157,12 +166,29 @@ static const nsModuleComponentInfo compo
     NS_URLCLASSIFIERUTILS_CONTRACTID,
     nsUrlClassifierUtilsConstructor },
 #endif
 #ifdef MOZ_FEEDS
   { "Unescape HTML",
     NS_SCRIPTABLEUNESCAPEHTML_CID,
     NS_SCRIPTABLEUNESCAPEHTML_CONTRACTID,
     nsScriptableUnescapeHTMLConstructor },
+  { "Feed Sniffer",
+    NS_FEEDSNIFFER_CID,
+    NS_FEEDSNIFFER_CONTRACTID,
+    nsFeedSnifferConstructor,
+   nsFeedSniffer::Register },
+  { "about:feeds Page",
+    NS_ABOUTFEEDS_CID,
+    NS_ABOUT_MODULE_CONTRACTID_PREFIX "feeds",
+    nsAboutFeeds::Create
+  },
+#endif
+#ifdef MOZ_WIDGET_GTK2
+  { "Browser Shell Service",
+    NS_SHELLSERVICE_CID,
+    NS_SHELLSERVICE_CONTRACTID,
+    nsGNOMEShellServiceConstructor 
+  },
 #endif
 };
 
 NS_IMPL_NSGETMODULE(nsToolkitCompsModule, components)
diff -U 8 -prN mozilla-orig/toolkit/library/libxul-config.mk mozilla/toolkit/library/libxul-config.mk
--- mozilla-orig/toolkit/library/libxul-config.mk	2008-01-29 13:41:31.000000000 -0400
+++ mozilla/toolkit/library/libxul-config.mk	2008-01-29 14:06:20.000000000 -0400
@@ -259,17 +259,17 @@ endif
 COMPONENT_LIBS += \
 	jar$(VERSION_NUMBER) \
 	$(NULL)
 	
 COMPONENT_LIBS += \
  	commandlines \
  	$(NULL)
 
-ifndef MOZ_MICROB
+ifdef MOZ_MICROB
 COMPONENT_LIBS += \
  	toolkitcomps \
  	$(NULL)
 endif
 
 ifdef MOZ_MATHML
 COMPONENT_LIBS += ucvmath
 endif
diff -U 8 -prN mozilla-orig/toolkit/library/nsStaticXULComponents.cpp mozilla/toolkit/library/nsStaticXULComponents.cpp
--- mozilla-orig/toolkit/library/nsStaticXULComponents.cpp	2008-01-29 13:41:31.000000000 -0400
+++ mozilla/toolkit/library/nsStaticXULComponents.cpp	2008-01-29 14:06:30.000000000 -0400
@@ -258,17 +258,17 @@
 #define XULENABLED_MODULES                   \
     MODULE(tkAutoCompleteModule)             \
     MODULE(PKI)
 #endif
 #else
 #define XULENABLED_MODULES
 #endif
 
-#ifndef MOZ_MICROB
+#ifdef MOZ_MICROB
 #define STD_MODULES                          \
     MODULE(nsToolkitCompsModule)             \
     MODULE(nsJarModule)
 #else
 #define STD_MODULES MODULE(nsJarModule)
 #endif
 
 #ifdef MOZ_SPELLCHECK
diff -U 8 -prN mozilla-orig/toolkit/system/gnome/nsGnomeVFSService.cpp mozilla/toolkit/system/gnome/nsGnomeVFSService.cpp
--- mozilla-orig/toolkit/system/gnome/nsGnomeVFSService.cpp	2008-01-29 13:41:32.000000000 -0400
+++ mozilla/toolkit/system/gnome/nsGnomeVFSService.cpp	2008-01-29 14:07:07.000000000 -0400
@@ -45,17 +45,17 @@
 #include "nsAutoPtr.h"
 
 extern "C" {
 #include <libgnomevfs/gnome-vfs-application-registry.h>
 #include <libgnomevfs/gnome-vfs-init.h>
 #include <libgnomevfs/gnome-vfs-mime.h>
 #include <libgnomevfs/gnome-vfs-mime-handlers.h>
 #include <libgnomevfs/gnome-vfs-mime-info.h>
-#include <libgnome/gnome-url.h>
+////#include <libgnome/gnome-url.h>
 }
 
 class nsGnomeVFSMimeApp : public nsIGnomeVFSMimeApp
 {
 public:
   NS_DECL_ISUPPORTS
   NS_DECL_NSIGNOMEVFSMIMEAPP
 
@@ -234,18 +234,18 @@ nsGnomeVFSService::GetDescriptionForMime
 }
 
 NS_IMETHODIMP
 nsGnomeVFSService::ShowURI(nsIURI *aURI)
 {
   nsCAutoString spec;
   aURI->GetSpec(spec);
 
-  if (gnome_url_show(spec.get(), NULL))
-    return NS_OK;
+  //if (gnome_url_show(spec.get(), NULL))
+  //  return NS_OK;
 
   return NS_ERROR_FAILURE;
 }
 
 NS_IMETHODIMP
 nsGnomeVFSService::SetAppStringKey(const nsACString &aID,
                                    PRInt32           aKey,
                                    const nsACString &aValue)
diff -U 8 -prN mozilla-orig/toolkit/toolkit-tiers.mk mozilla/toolkit/toolkit-tiers.mk
--- mozilla-orig/toolkit/toolkit-tiers.mk	2008-01-29 13:41:32.000000000 -0400
+++ mozilla/toolkit/toolkit-tiers.mk	2008-01-29 14:07:19.000000000 -0400
@@ -260,19 +260,19 @@ ifdef NS_TRACE_MALLOC
 tier_toolkit_dirs += tools/trace-malloc
 endif
 
 ifdef MOZ_LDAP_XPCOM
 tier_toolkit_staticdirs += directory/c-sdk
 tier_toolkit_dirs	+= directory/xpcom
 endif
 
-ifdef MOZ_ENABLE_GNOME_COMPONENT
+#ifdef MOZ_ENABLE_GNOME_COMPONENT
 tier_toolkit_dirs    += toolkit/system/gnome
-endif
+#endif
 
 ifdef MOZ_ENABLE_DBUS
 tier_toolkit_dirs    += toolkit/system/dbus
 endif
 
 ifdef MOZ_LEAKY
 tier_toolkit_dirs        += tools/leaky
 endif
