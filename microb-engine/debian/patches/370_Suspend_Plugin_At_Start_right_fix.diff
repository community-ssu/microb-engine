--- mozilla/modules/plugin/base/src/ns4xPluginInstance.cpp.orig	2007-09-12 11:57:20.000000000 +0300
+++ mozilla/modules/plugin/base/src/ns4xPluginInstance.cpp	2007-09-12 13:34:51.000000000 +0300
@@ -1080,23 +1080,22 @@ nsresult ns4xPluginInstance::InitializeP
     // check the pref
     nsCOMPtr<nsIPref> pref = do_GetService(NS_PREF_CONTRACTID);
     PRBool suspend = PR_TRUE;
     PRBool suspend_global = PR_TRUE;
     nsresult rv2 = PR_TRUE;
     rv = pref->GetBoolPref ("plugins.flashhack",&suspend);
     rv2 = pref->GetBoolPref ("plugins.enableSuspending",&suspend_global);
 
     if (NS_SUCCEEDED(rv2) && suspend_global && NS_SUCCEEDED(rv) && suspend) {
       PRBool handled;
-      PRUint16 eventType = PLUGIN_EVENT_SUSPEND;
       nsPluginEvent event;
-      event.event = eventType;
+      event.event.type = PLUGIN_EVENT_SUSPEND;
       this->HandleEvent(&event,&handled);
     }
   return NS_OK;
 }
 
 
 ////////////////////////////////////////////////////////////////////////
 NS_IMETHODIMP ns4xPluginInstance::Destroy(void)
 {
   PLUGIN_LOG(PLUGIN_LOG_NORMAL, ("ns4xPluginInstance::Destroy this=%p\n",this));
@@ -1264,22 +1263,22 @@ NS_IMETHODIMP ns4xPluginInstance::Handle
       result = CallNPP_HandleEventProc(fCallbacks->event,
                                        &fNPP,
                                        (void*)&event->event);
 #endif
 
 #ifdef XP_UNIX
       nsPluginEvent ev;
       ev.event = event->event;
       NS_TRY_SAFE_CALL_RETURN(result, CallNPP_HandleEventProc(fCallbacks->event,
                                                               &fNPP,
-                                                              (void*)(ev.event)),
-                              fLibrary, this);
+                                                              (void*)(ev.event.type)),
+                                                              fLibrary, this);
 #endif
 
       NPP_PLUGIN_LOG(PLUGIN_LOG_NOISY,
       ("NPP HandleEvent called: this=%p, npp=%p, event=%d, return=%d\n", 
       this, &fNPP, event->event, result));
 
       *handled = result;
     }
 
   return NS_OK;
--- mozilla/modules/plugin/base/public/nsplugindefs.h.orig	2007-09-12 11:56:10.000000000 +0300
+++ mozilla/modules/plugin/base/public/nsplugindefs.h	2007-09-12 12:57:02.000000000 +0300
@@ -329,23 +329,23 @@ struct nsPluginEvent {
     uint32      event;
     uint32      wParam;
     uint32      lParam;
 
 #elif defined(XP_WIN)
     uint16      event;
     uint32      wParam;
     uint32      lParam;
 
 #elif defined(XP_UNIX)
-    uint16      event;
+    XEvent      event;
 #else
-    uint16      event;
+    void        *event;
 #endif
 };
 
 /*
  *  Non-standard event types that can be passed to HandleEvent
  *  (These need to be kept in sync with the events defined in npapi.h.)
  */
 enum nsPluginEventType {
 #ifdef XP_MACOSX
     nsPluginEventType_GetFocusEvent = (osEvt + 16),
