diff -r 068b964b931b widget/src/xpwidgets/nsXPLookAndFeel.cpp
--- a/widget/src/xpwidgets/nsXPLookAndFeel.cpp	Sun Feb 08 14:00:48 2009 +0200
+++ b/widget/src/xpwidgets/nsXPLookAndFeel.cpp	Mon Feb 09 15:09:42 2009 +0200
@@ -54,7 +54,7 @@
 #ifdef DEBUG
 #include "nsSize.h"
 #endif
- 
+
 NS_IMPL_ISUPPORTS2(nsXPLookAndFeel, nsILookAndFeel, nsIObserver)
 
 nsLookAndFeelIntPref nsXPLookAndFeel::sIntPrefs[] =
@@ -256,6 +256,7 @@ PRInt32 nsXPLookAndFeel::sCachedColorBit
 PRInt32 nsXPLookAndFeel::sCachedColorBits[COLOR_CACHE_SIZE] = {0};
 
 PRBool nsXPLookAndFeel::sInitialized = PR_FALSE;
+PRBool nsXPLookAndFeel::sUseNativeColors = PR_TRUE;
 
 nsXPLookAndFeel::nsXPLookAndFeel() : nsILookAndFeel()
 {
@@ -454,6 +455,11 @@ nsXPLookAndFeel::Init()
     InitColorFromPref(i, prefs);
     prefBranchInternal->AddObserver(sColorPrefs[i], this, PR_FALSE);
   }
+
+  PRBool val;
+  if (NS_SUCCEEDED(prefs->GetBoolPref("ui.use_native_colors", &val))) {
+    sUseNativeColors = val;
+  }
 }
 
 nsXPLookAndFeel::~nsXPLookAndFeel()
@@ -616,7 +622,7 @@ nsXPLookAndFeel::GetColor(const nsColorI
     return NS_OK;
   }
 
-  if (NS_SUCCEEDED(NativeGetColor(aID, aColor))) {
+  if (sUseNativeColors && NS_SUCCEEDED(NativeGetColor(aID, aColor))) {
 #ifndef MOZ_NO_LCMS
     if ((gfxPlatform::GetCMSMode() == eCMSMode_All) && !IsSpecialColor(aID, aColor)) {
       cmsHTRANSFORM transform = gfxPlatform::GetCMSInverseRGBTransform();
diff -r 068b964b931b widget/src/xpwidgets/nsXPLookAndFeel.h
--- a/widget/src/xpwidgets/nsXPLookAndFeel.h	Sun Feb 08 14:00:48 2009 +0200
+++ b/widget/src/xpwidgets/nsXPLookAndFeel.h	Mon Feb 09 15:09:42 2009 +0200
@@ -131,6 +131,7 @@ protected:
   static const char sColorPrefs[][38];
   static PRInt32 sCachedColors[nsILookAndFeel::eColor_LAST_COLOR];
   static PRInt32 sCachedColorBits[COLOR_CACHE_SIZE];
+  static PRBool sUseNativeColors;
 };
 
 extern nsresult NS_NewXPLookAndFeel(nsILookAndFeel**);
