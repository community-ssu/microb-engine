Index: mozilla/widget/src/gtk2/nsNativeThemeGTK.cpp
===================================================================
--- mozilla.orig/widget/src/gtk2/nsNativeThemeGTK.cpp
+++ mozilla/widget/src/gtk2/nsNativeThemeGTK.cpp
@@ -1045,16 +1045,19 @@ nsNativeThemeGTK::GetMinimumWidgetSize(n
     {
       gint indicator_size, indicator_spacing;
 
       if (aWidgetType == NS_THEME_CHECKBOX) {
         moz_gtk_checkbox_get_metrics(&indicator_size, &indicator_spacing);
       } else {
         moz_gtk_radio_get_metrics(&indicator_size, &indicator_spacing);
       }
+#ifdef CSGCC
+      indicator_size /= 2;
+#endif
 
       // Include space for the indicator and the padding around it.
       aResult->width = indicator_size;
       aResult->height = indicator_size;
       *aIsOverridable = PR_FALSE;
     }
     break;
   case NS_THEME_TOOLBAR_BUTTON_DROPDOWN:
Index: mozilla/widget/src/gtk2/gtk2drawing.c
===================================================================
--- mozilla.orig/widget/src/gtk2/gtk2drawing.c
+++ mozilla/widget/src/gtk2/gtk2drawing.c
@@ -985,17 +985,20 @@ moz_gtk_toggle_paint(GdkDrawable* drawab
 
     NS_ASSERTION(rect->width == indicator_size,
                  "GetMinimumWidgetSize was ignored");
     /*
      * vertically center in the box, since XUL sometimes ignores our
      * GetMinimumWidgetSize in the vertical dimension
      */
     x = rect->x;
-    y = rect->y + (rect->height - indicator_size) / 2;
+    y = rect->y;// + (rect->height - indicator_size) / 2;
+
+    if (MIN(rect->width, rect->height) < indicator_size)
+        indicator_size = MIN(rect->width, rect->height);
     width = indicator_size;
     height = indicator_size;
 
     focus_x = x - indicator_spacing;
     focus_y = y - indicator_spacing;
     focus_width = width + 2 * indicator_spacing;
     focus_height = height + 2 * indicator_spacing;
   
